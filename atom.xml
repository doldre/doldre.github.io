<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xinchen&#39;s Blog</title>
  <subtitle>For you thousands of times.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://luoxinchen.me/"/>
  <updated>2016-09-10T02:18:43.000Z</updated>
  <id>http://luoxinchen.me/</id>
  
  <author>
    <name>Xinchen Luo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>暑期集训-7-6-k</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-k/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-k/</id>
    <published>2016-09-10T02:16:49.000Z</published>
    <updated>2016-09-10T02:18:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>找一段最小的连续的区间，包含所有出现过的数字</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>two pointers<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line"> *************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 1e6 + 6;</div><div class="line">int A[maxn];</div><div class="line">int V[maxn];</div><div class="line">int n;</div><div class="line">int cnt[maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d", &amp;n) == 1) &#123;</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf("%d", &amp;A[i]);</div><div class="line">            V[i-1] = A[i]; </div><div class="line">        &#125;</div><div class="line">        sort(V, V + n);</div><div class="line">        int m = unique(V, V + n) - V;</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            A[i] = lower_bound(V, V + m, A[i]) - V;</div><div class="line">        &#125;</div><div class="line">        int ans = inf; </div><div class="line">        memset(cnt, 0, sizeof(cnt));</div><div class="line">        for (int l = 1, r = 1, c = 0; r &lt;= n; r++) &#123;</div><div class="line">            if(cnt[A[r]]++ == 0) c++;</div><div class="line">            while(c == m) &#123;</div><div class="line">                ans = min(ans, r - l + 1);</div><div class="line">                cnt[A[l]]--;</div><div class="line">                if(cnt[A[l]] == 0) c--;</div><div class="line">                l++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("%d\n", ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;找一段最小的连续的区间，包含所有出现过的数字&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;two pointers&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="two pointers" scheme="http://luoxinchen.me/tags/two-pointers/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-j</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-j/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-j/</id>
    <published>2016-09-10T02:09:59.000Z</published>
    <updated>2016-09-10T02:14:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给一个M*N的01矩阵，每次可以反转一个位置，但其上下左右的位置也会跟着反转，问最后能否把这个矩阵反转为全为0，并输出方案</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>枚举第一行的反转方案，递推 O(2^m * n)<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line"> *************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 15;</div><div class="line">int M, N;</div><div class="line">int src[maxn];</div><div class="line">int dp[maxn];</div><div class="line">int buf[maxn];</div><div class="line">int ans[maxn];</div><div class="line">void work(int &amp;x, int mask) &#123;</div><div class="line">    for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">        if((mask &gt;&gt; i) &amp; 1) &#123;</div><div class="line">            x ^= 1&lt;&lt;i;</div><div class="line">            x ^= (1&lt;&lt;i) &gt;&gt; 1;</div><div class="line">            if(i &lt; N - 1) x ^= ((1&lt;&lt;i)&lt;&lt;1);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    scanf("%d%d", &amp;M, &amp;N);</div><div class="line">    memset(dp, 0, sizeof(0));</div><div class="line">    memset(src, 0, sizeof(src));</div><div class="line">    for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">        for (int j = 0; j &lt; N; j++) &#123;</div><div class="line">            int x; scanf("%d", &amp;x);</div><div class="line">            src[i] |= x &lt;&lt; (N - j - 1);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    int cnt = inf;</div><div class="line">    for (int mask = 0; mask &lt; (1 &lt;&lt; N); mask++) &#123;</div><div class="line">        memcpy(dp, src, sizeof(src));</div><div class="line">        int t = mask;</div><div class="line">        for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">            work(dp[i], t);</div><div class="line">            buf[i] = t;</div><div class="line">            if(i + 1 &lt; M) &#123;</div><div class="line">                dp[i+1] ^= t;</div><div class="line">            &#125;</div><div class="line">            t = dp[i];</div><div class="line">        &#125;</div><div class="line">        if(dp[M-1] == 0) &#123;</div><div class="line">            int t = 0;</div><div class="line">            for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">                t += __builtin_popcount(buf[i]);</div><div class="line">            &#125;</div><div class="line">            if(t &lt; cnt) &#123;</div><div class="line">                cnt = t;</div><div class="line">                memcpy(ans, buf, sizeof(buf));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(cnt == inf) &#123;</div><div class="line">        printf("IMPOSSIBLE\n");</div><div class="line">    &#125; else &#123;</div><div class="line">        for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">            for (int j = 0; j &lt; N; j++) &#123;</div><div class="line">                printf("%d%c", ((ans[i]&gt;&gt;(N-1-j)) &amp; 1), </div><div class="line">                        j == N - 1 ? '\n' : ' ');</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给一个M*N的01矩阵，每次可以反转一个位置，但其上下左右的位置也会跟着反转，问最后能否把这个矩阵反转为全为0，并输出方案&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;枚举第一行的反转方案，递推 O(2^m * n)&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-i</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-i/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-i/</id>
    <published>2016-09-10T02:02:10.000Z</published>
    <updated>2016-09-10T02:08:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 3185<br>给一列碗，将其翻转为全部碗口向上，最少需要翻转多少次，翻转一个碗时其两边的碗也会被翻转。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>这里有两种做法</p>
<ol>
<li>因为碗只有20个，所以我们可以直接枚举翻转方案，然后check最后碗是否是全部向上。这里枚举方案有2^20,check可以O(1)完成。</li>
<li>可以枚举第一个碗是否翻转，然后后面可以直接递推出现，复杂度2*20</li>
</ol>
<a id="more"></a>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>这里给出做法1的代码<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int s = 0;</div><div class="line">    for (int i = 0; i &lt; 20; i++) &#123;</div><div class="line">        int x; scanf("%d", &amp;x);</div><div class="line">        s |= x&lt;&lt;i;</div><div class="line">    &#125;</div><div class="line">    int ans = 100;</div><div class="line">    for (int i = 0; i &lt; (1&lt;&lt;20); i++) &#123;</div><div class="line">        int t = i ^ (i &lt;&lt; 1) ^ (i &gt;&gt; 1);</div><div class="line">        t %= (1&lt;&lt;20);</div><div class="line">        if((s ^ t) == 0) &#123;</div><div class="line">            ans = min(ans, __builtin_popcount(i));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    cout &lt;&lt; ans &lt;&lt; endl;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 3185&lt;br&gt;给一列碗，将其翻转为全部碗口向上，最少需要翻转多少次，翻转一个碗时其两边的碗也会被翻转。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;这里有两种做法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;因为碗只有20个，所以我们可以直接枚举翻转方案，然后check最后碗是否是全部向上。这里枚举方案有2^20,check可以O(1)完成。&lt;/li&gt;
&lt;li&gt;可以枚举第一个碗是否翻转，然后后面可以直接递推出现，复杂度2*20&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="开关问题" scheme="http://luoxinchen.me/tags/%E5%BC%80%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-g</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-g/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-g/</id>
    <published>2016-09-10T01:57:51.000Z</published>
    <updated>2016-09-10T02:01:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>UVA 10881<br>许多蚂蚁在一条直线上，每个蚂蚁的移动速度都是1，并且有一个初始方向。两个蚂蚁相撞时会转向，问t世间后各个蚂蚁的位置。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>经典题，蚂蚁相撞后可以等价于直接穿过，然后排个序对应一下就好。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1e4 + 5;</div><div class="line">pair&lt;pii, int&gt; A[maxn];</div><div class="line">pii buf[maxn];</div><div class="line">int pos[maxn], sta[maxn];</div><div class="line">int L, T, n;</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int Case; scanf("%d", &amp;Case);</div><div class="line">    for (int Cas = 1; Cas &lt;= Case; Cas++) &#123;</div><div class="line">        scanf("%d%d%d", &amp;L, &amp;T, &amp;n);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            int x; char ch;</div><div class="line">            cin &gt;&gt; x &gt;&gt; ch;</div><div class="line">            A[i].xx.xx = x;</div><div class="line">            A[i].yy = i;</div><div class="line">            A[i].xx.yy = (ch == 'R' ? 1 : -1);</div><div class="line">        &#125;</div><div class="line">        sort(A, A + n);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            buf[i].xx = A[i].xx.xx + A[i].xx.yy * T;</div><div class="line">            buf[i].yy = A[i].xx.yy;</div><div class="line">        &#125;</div><div class="line">        sort(buf, buf + n);</div><div class="line">        printf("Case #%d:\n", Cas);</div><div class="line"></div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            pos[A[i].yy] = buf[i].xx;</div><div class="line">            // prln(A[i].yy);</div><div class="line">            if(buf[i].xx &lt; 0 || buf[i].xx &gt; L) &#123;</div><div class="line">                sta[A[i].yy] = 1;</div><div class="line">            &#125; else &#123;</div><div class="line">                // printf("%d ", buf[i].xx);</div><div class="line">                if((i &gt; 0 &amp;&amp; buf[i].xx == buf[i-1].xx) ||</div><div class="line">                        (i &lt; n - 1 &amp;&amp; buf[i].xx == buf[i+1].xx)) &#123;</div><div class="line">                    sta[A[i].yy] = 2;</div><div class="line">                &#125; else &#123;</div><div class="line">                    if(buf[i].yy == 1) &#123;</div><div class="line">                        sta[A[i].yy] = 3;</div><div class="line">                    &#125; else &#123;</div><div class="line">                        sta[A[i].yy] = 4;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            if(sta[i] == 1) &#123;</div><div class="line">                printf("Fell off\n");</div><div class="line">            &#125; </div><div class="line">            if(sta[i] == 2) &#123;</div><div class="line">                printf("%d Turning\n", pos[i]);</div><div class="line">            &#125;</div><div class="line">            if(sta[i] == 3) &#123;</div><div class="line">                printf("%d R\n", pos[i]);</div><div class="line">            &#125;</div><div class="line">            if(sta[i] == 4) &#123;</div><div class="line">                printf("%d L\n", pos[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        puts("");</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;UVA 10881&lt;br&gt;许多蚂蚁在一条直线上，每个蚂蚁的移动速度都是1，并且有一个初始方向。两个蚂蚁相撞时会转向，问t世间后各个蚂蚁的位置。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;经典题，蚂蚁相撞后可以等价于直接穿过，然后排个序对应一下就好。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="UVA" scheme="http://luoxinchen.me/tags/UVA/"/>
    
      <category term="简单题" scheme="http://luoxinchen.me/tags/%E7%AE%80%E5%8D%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-e</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-e/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-e/</id>
    <published>2016-09-10T01:50:17.000Z</published>
    <updated>2016-09-10T01:56:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 1700<br>N个人过河，船每次只能坐连个人，船载每个人过河的所需的时间不同，问最快的过河时间</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>贪心，n &lt;= 3的时候可以直接算出，n &gt; 3时，考虑最慢的两个人过河最快的两种方案取最小值，即min(A[0] + A[n-1] + A[n-2] + A[0], A[1] + A[0] + A[1] + A[n-1]);</p>
<a id="more"></a>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1e3 + 5;</div><div class="line">int A[maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T; scanf("%d", &amp;T);</div><div class="line">    while(T--) &#123;</div><div class="line">        int n;</div><div class="line">        scanf("%d", &amp;n);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            scanf("%d", &amp;A[i]);</div><div class="line">        &#125;</div><div class="line">        int ans = 0;</div><div class="line">        while(n) &#123;</div><div class="line">            if(n &lt;= 2) &#123;</div><div class="line">                ans += A[n - 1]; n = 0;</div><div class="line">            &#125; else if(n == 3) &#123;</div><div class="line">                ans += A[0] + A[1] + A[2]; n = 0;</div><div class="line">            &#125; else &#123;</div><div class="line">                ans += min(A[0] + A[n-1] + A[n-2] + A[0],</div><div class="line">                        A[1] + A[0] + A[1] + A[n-1]);</div><div class="line">                n -= 2;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("%d\n", ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 1700&lt;br&gt;N个人过河，船每次只能坐连个人，船载每个人过河的所需的时间不同，问最快的过河时间&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;贪心，n &amp;lt;= 3的时候可以直接算出，n &amp;gt; 3时，考虑最慢的两个人过河最快的两种方案取最小值，即min(A[0] + A[n-1] + A[n-2] + A[0], A[1] + A[0] + A[1] + A[n-1]);&lt;/p&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="贪心" scheme="http://luoxinchen.me/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="POj" scheme="http://luoxinchen.me/tags/POj/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-a</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-a/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-a/</id>
    <published>2016-09-10T01:44:39.000Z</published>
    <updated>2016-09-10T01:51:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 2586<br>给一颗树，询问u,v两点的距离</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>转化为有根树，从根root开始跑单源最短路，求个最近公共祖先fa，然后d[u][v] = d[root][u] + d[root][v] - 2 * d[root][fa];<br><!--moer--></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxm = 200 + 5;</div><div class="line">const int maxn = 4e4 + 5;</div><div class="line"></div><div class="line">struct DSU &#123;</div><div class="line">    int par[maxn], n;</div><div class="line">    void init(int n) &#123;</div><div class="line">        this-&gt;n = n;</div><div class="line">        for (int i = 0; i &lt;= n; i++) &#123;</div><div class="line">            par[i] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int find(int x) &#123;</div><div class="line">        return x == par[x] ? x : par[x] = find(par[x]);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    void merge(int a, int b) &#123;</div><div class="line">        a = find(a), b = find(b);</div><div class="line">        par[a] = b;</div><div class="line">    &#125;</div><div class="line">&#125;dsu;</div><div class="line"></div><div class="line">struct Edge &#123;</div><div class="line">    int to, w;</div><div class="line">    Edge() &#123;&#125;</div><div class="line">    Edge(int to, int w): to(to), w(w) &#123;&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">vector&lt;Edge&gt; G[maxn], querry[maxn];</div><div class="line">int used[maxn];</div><div class="line">int ans[maxm];</div><div class="line">int dist[maxn];</div><div class="line">int n, m;</div><div class="line"></div><div class="line">void dfs(int u, int d, int fa) &#123;</div><div class="line">   dist[u] = d;</div><div class="line">   for (int i = 0; i &lt; (int)G[u].size(); i++) &#123;</div><div class="line">       int v = G[u][i].to;</div><div class="line">       if(v == fa) continue;</div><div class="line">       dfs(v, d + G[u][i].w, u);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void tarjan(int u, int fa) &#123;</div><div class="line">    used[u] = true;</div><div class="line">    for (int i = 0; i &lt; (int)G[u].size(); i++) &#123;</div><div class="line">        int v = G[u][i].to;</div><div class="line">        if(v == fa) continue;</div><div class="line">        tarjan(v, u);</div><div class="line">        dsu.merge(v, u);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    for (int i = 0; i &lt; (int)querry[u].size(); i++) &#123;</div><div class="line">        int v = querry[u][i].to;</div><div class="line">        if (used[v]) &#123;</div><div class="line">            ans[querry[u][i].w] = dist[u] + dist[v] - 2 * dist[dsu.find(v)];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T; scanf("%d", &amp;T);</div><div class="line">    while(T--) &#123;</div><div class="line">        scanf("%d%d", &amp;n, &amp;m);</div><div class="line">        for (int i = 0; i &lt;= n; i++) &#123;</div><div class="line">            G[i].clear();</div><div class="line">            querry[i].clear();</div><div class="line">        &#125;</div><div class="line">        for (int i = 1; i &lt;= n - 1; i++) &#123;</div><div class="line">            int u, v, w;</div><div class="line">            scanf("%d%d%d", &amp;u, &amp;v, &amp;w);</div><div class="line">            G[u].push_back(Edge(v, w));</div><div class="line">            G[v].push_back(Edge(u, w));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">            int u, v;</div><div class="line">            scanf("%d%d", &amp;u, &amp;v);</div><div class="line">            querry[u].push_back(Edge(v, i));</div><div class="line">            querry[v].push_back(Edge(u, i));</div><div class="line">        &#125;</div><div class="line">        memset(dist, -1, sizeof(dist));</div><div class="line">        dfs(1, 0, -1);</div><div class="line">        memset(used, 0, sizeof(used));</div><div class="line">        dsu.init(n);</div><div class="line">        tarjan(1, -1);</div><div class="line">        for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">            printf("%d\n", ans[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 2586&lt;br&gt;给一颗树，询问u,v两点的距离&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;heade
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="图论" scheme="http://luoxinchen.me/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="Tarjan" scheme="http://luoxinchen.me/tags/Tarjan/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-q</title>
    <link href="http://luoxinchen.me/2016/09/09/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-q/"/>
    <id>http://luoxinchen.me/2016/09/09/暑期集训-7-4-q/</id>
    <published>2016-09-09T03:38:59.000Z</published>
    <updated>2016-09-09T03:49:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给个矩形，给n条线段，每条线段均从矩形四边出发，到矩形四边结束。给出宝藏的坐标。问从外面进入宝藏所在的位置至少需要开几道门。门只能开在一条线段的中间。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>可以发现这样一个性质，从矩形边长上一个点，到达宝藏需要开的门的最少个数，等于宝藏所在点与此点连线与其他线段的交点数。所以枚举起点，暴力求线段交就好。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 300 + 5;</div><div class="line">const double eps = 1e-9;</div><div class="line"></div><div class="line">int sgn(double x) &#123;</div><div class="line">    if(x &gt; eps) return 1;</div><div class="line">    else if(x &lt; -eps) return -1;</div><div class="line">    else return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">struct Point &#123;</div><div class="line">    double x, y;</div><div class="line">    Point() &#123;&#125;</div><div class="line">    Point(double x, double y):x(x), y(y) &#123;&#125;</div><div class="line">    void read() &#123;</div><div class="line">        scanf("%lf%lf", &amp;x, &amp;y);</div><div class="line">    &#125;</div><div class="line">    double det(const Point &amp;b) const &#123;</div><div class="line">        return x * b.y - y * b.x;</div><div class="line">    &#125;</div><div class="line">    double dot(const Point &amp;b) const &#123;</div><div class="line">        return x * b.x + y * b.y;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Point operator - (const Point &amp;b) const &#123;</div><div class="line">        return Point(x - b.x, y - b.y);</div><div class="line">    &#125;</div><div class="line">&#125;ps[maxn];</div><div class="line"></div><div class="line">struct Line &#123;</div><div class="line">    Point s, t;</div><div class="line">    Line(Point s, Point t): s(s), t(t) &#123;&#125;</div><div class="line">    Line() &#123;&#125;</div><div class="line">    void read() &#123;</div><div class="line">        s.read(); t.read();</div><div class="line">    &#125;</div><div class="line">&#125;ls[maxn];</div><div class="line"></div><div class="line"></div><div class="line">bool strict_cross(Line a, Line b) &#123;</div><div class="line">    return sgn((b.t - b.s).det(a.s - b.s)) * sgn((b.t - b.s).det(a.t - b.s)) &lt; 0 &amp;&amp;</div><div class="line">        sgn((a.t - a.s).det(b.s - a.s)) * sgn((a.t - a.s).det(b.t - a.s)) &lt; 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int n;</div><div class="line">    scanf("%d", &amp;n);</div><div class="line">    Point X;</div><div class="line">    int cntps = 0;</div><div class="line">    ps[cntps++] = Point(0, 0);</div><div class="line">    // ps[cntps++] = Point(0, 100);</div><div class="line">    // ps[cntps++] = Point(100, 0);</div><div class="line">    // ps[cntps++] = Point(100, 100);</div><div class="line">    for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">        ls[i].read();</div><div class="line">        ps[cntps++] = ls[i].s;</div><div class="line">        ps[cntps++] = ls[i].t;</div><div class="line">    &#125;</div><div class="line">    X.read();</div><div class="line">    int ans = maxn;</div><div class="line">    for (int i = 0; i &lt; cntps; i++) &#123;</div><div class="line">        Line l(X, ps[i]);</div><div class="line">        int t = 1;</div><div class="line">        for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">            if(strict_cross(l, ls[j])) &#123;</div><div class="line">                t++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        ans = min(ans,  t);</div><div class="line">    &#125;</div><div class="line">    printf("Number of doors = %d\n", ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给个矩形，给n条线段，每条线段均从矩形四边出发，到矩形四边结束。给出宝藏的坐标。问从外面进入宝藏所在的位置至少需要开几道门。门只能开在一条线段的中间。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;可以发现这样一个性质，从矩形边长上一个点，到达宝藏需要开的门的最少个数，等于宝藏所在点与此点连线与其他线段的交点数。所以枚举起点，暴力求线段交就好。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="计算几何" scheme="http://luoxinchen.me/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
      <category term="线段交" scheme="http://luoxinchen.me/tags/%E7%BA%BF%E6%AE%B5%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-p</title>
    <link href="http://luoxinchen.me/2016/09/09/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-p/"/>
    <id>http://luoxinchen.me/2016/09/09/暑期集训-7-4-p/</id>
    <published>2016-09-09T03:34:02.000Z</published>
    <updated>2016-09-09T03:38:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 2398<br>给一个矩形，然后k条线段讲其划分为k+1块，给n个点坐标，问对于每一个正数t，有多少块包含t个点</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>对线段排个序，然后用叉积判断点和线段的关系，二分查找点在哪一块<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; " " </div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line"></div><div class="line">struct Point &#123;</div><div class="line">    ll x, y;</div><div class="line">    Point() &#123;&#125;</div><div class="line">    Point(ll x, ll y):x(x), y(y) &#123;&#125;</div><div class="line">    bool operator &lt; (const Point &amp;b) const &#123;</div><div class="line">        return x &lt; b.x;</div><div class="line">    &#125;</div><div class="line">    Point operator - (const Point &amp;b) const &#123;</div><div class="line">        return Point(x - b.x, y - b.y);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">typedef Point vec;</div><div class="line"></div><div class="line">ll cross_product(Point a, Point b) &#123;</div><div class="line">    return a.x * b.y - a.y * b.x;</div><div class="line">&#125;</div><div class="line"></div><div class="line">struct Line &#123;</div><div class="line">    Point s, t;</div><div class="line">    Line() &#123;&#125;</div><div class="line">    Line(Point s, Point t):s(s), t(t) &#123;&#125;</div><div class="line">    bool operator &lt; (const Line &amp;b) const &#123;</div><div class="line">        return s &lt; b.s;</div><div class="line">    &#125;</div><div class="line">    vec get_vec() &#123;</div><div class="line">        return t - s;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">const int maxn = 1000 + 5;</div><div class="line">Line ls[maxn];</div><div class="line">int n, m, X1, Y1, X2, Y2, cntls;</div><div class="line"></div><div class="line">bool judge(Line a, Line b) &#123;</div><div class="line">    return cross_product(a.get_vec(), b.get_vec()) &gt; 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int get_id(int x, int y) &#123;</div><div class="line">    int l = 0, r = cntls - 1;</div><div class="line">    while(l &lt; r - 1) &#123;</div><div class="line">        int m = (l + r) &gt;&gt; 1;</div><div class="line">        if(!judge(ls[m], Line(ls[m].s, Point(x, y)))) &#123;</div><div class="line">            l = m;</div><div class="line">        &#125; else &#123;</div><div class="line">            r = m;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int res[maxn];</div><div class="line">int cnt[maxn];</div><div class="line">int main() &#123;</div><div class="line">#ifdef LOCAL</div><div class="line">	//freopen("in.txt", "r", stdin);</div><div class="line">	//freopen("out.txt", 'w', stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d%d", &amp;n, &amp;m) == 2 &amp;&amp; n) &#123;</div><div class="line">        scanf("%d%d%d%d", &amp;X1, &amp;Y1, &amp;X2, &amp;Y2);</div><div class="line">        cntls = 0;</div><div class="line">        ls[cntls++] = Line(Point(X1, Y2), Point(X1, Y1));</div><div class="line">        ls[cntls++] = Line(Point(X2, Y2), Point(X2, Y1));</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            int u, l;</div><div class="line">            scanf("%d%d", &amp;u, &amp;l);</div><div class="line">            ls[cntls++] = Line(Point(l, Y2), Point(u, Y1));</div><div class="line">        &#125;</div><div class="line">        sort(ls, ls + cntls);</div><div class="line">        memset(cnt, 0, sizeof(cnt));</div><div class="line">        memset(res, 0, sizeof(res));</div><div class="line">        for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">            int x, y;</div><div class="line">            scanf("%d%d", &amp;x, &amp;y);</div><div class="line">            int id = get_id(x, y);</div><div class="line">            cnt[id]++;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        for (int i = 0; i &lt; cntls; i++) &#123;</div><div class="line">            res[cnt[i]]++;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        printf("Box\n");</div><div class="line">        for (int i = 1; i &lt;= m; i++) &#123;</div><div class="line">            if(res[i] &gt; 0) &#123;</div><div class="line">                printf("%d: %d\n", i, res[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 2398&lt;br&gt;给一个矩形，然后k条线段讲其划分为k+1块，给n个点坐标，问对于每一个正数t，有多少块包含t个点&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;对线段排个序，然后用叉积判断点和线段的关系，二分查找点在哪一块&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="计算几何" scheme="http://luoxinchen.me/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-o</title>
    <link href="http://luoxinchen.me/2016/09/09/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-o/"/>
    <id>http://luoxinchen.me/2016/09/09/暑期集训-7-4-o/</id>
    <published>2016-09-09T03:22:07.000Z</published>
    <updated>2016-09-09T03:31:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 1797<br>给出每条道路的最大负载，求1到n之间最大负载的路径，输出这条路径的最大负载。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>最短路变形，把一条路径的长度规定为这条路径上的道路的最小负载，跑个最短路就好<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 1e3 + 5;</div><div class="line">vector&lt;pii&gt; G[maxn];</div><div class="line">int d[maxn];</div><div class="line">int n, m;</div><div class="line"></div><div class="line">int bfs() &#123;</div><div class="line">    memset(d, -1, sizeof(d));</div><div class="line">    queue&lt;int&gt; que;</div><div class="line">    d[1] = inf;</div><div class="line">    que.push(1);</div><div class="line">    while(!que.empty()) &#123;</div><div class="line">        int u = que.front(); que.pop();</div><div class="line">        for (int i = 0; i &lt; (int)G[u].size(); i++) &#123;</div><div class="line">            int v = G[u][i].xx;</div><div class="line">            int t = min(d[u], G[u][i].yy);</div><div class="line">            if(d[v] &lt; t) &#123;</div><div class="line">                d[v] = t;</div><div class="line">                que.push(v);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return d[n];</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T;</div><div class="line">    scanf("%d", &amp;T);</div><div class="line">    for (int Cas = 1; Cas &lt;= T; Cas++) &#123;</div><div class="line">        scanf("%d%d", &amp;n, &amp;m);</div><div class="line">        for (int i = 0; i &lt;= n; i++) G[i].clear();</div><div class="line">        for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">            int u, v, c;</div><div class="line">            scanf("%d%d%d", &amp;u, &amp;v, &amp;c);</div><div class="line">            G[u].push_back(pii(v, c));</div><div class="line">            G[v].push_back(pii(u, c));</div><div class="line">        &#125;</div><div class="line">        printf("Scenario #%d:\n%d\n\n", Cas, bfs());</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 1797&lt;br&gt;给出每条道路的最大负载，求1到n之间最大负载的路径，输出这条路径的最大负载。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;最短路变形，把一条路径的长度规定为这条路径上的道路的最小负载，跑个最短路就好&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="最短路" scheme="http://luoxinchen.me/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-n</title>
    <link href="http://luoxinchen.me/2016/09/09/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-n/"/>
    <id>http://luoxinchen.me/2016/09/09/暑期集训-7-4-n/</id>
    <published>2016-09-09T03:12:56.000Z</published>
    <updated>2016-09-09T03:47:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 2387<br>给个无向图，求1到n的最短距离</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>最短路裸题，随便跑个sfpa或者djikstra就好<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">#define xx first</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; " " </div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 1000 + 5;</div><div class="line">int d[maxn];</div><div class="line">struct Edge &#123;</div><div class="line">    int  to, w;</div><div class="line">    Edge() &#123;&#125;</div><div class="line">    Edge(int to, int w):to(to), w(w) &#123;&#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">vector&lt;Edge&gt; G[maxn];</div><div class="line"></div><div class="line">int T, N;</div><div class="line">int dij() &#123;</div><div class="line">    memset(d, 0x3f, sizeof(d));</div><div class="line">    priority_queue&lt;pii, vector&lt;pii&gt;, greater&lt;pii&gt; &gt; que;</div><div class="line">    d[1] = 0;</div><div class="line">    que.push(pii(d[1], 1));</div><div class="line">    while(!que.empty()) &#123;</div><div class="line">        pii cur = que.top(); que.pop();</div><div class="line">        int u = cur.yy, dist = cur.xx;</div><div class="line">        if(u == N) &#123;</div><div class="line">            return dist;</div><div class="line">        &#125;</div><div class="line">        for (int i = 0; i &lt; (int)G[u].size(); i++) &#123;</div><div class="line">            int v = G[u][i].to;</div><div class="line">            if(d[v] &gt; d[u] + G[u][i].w) &#123;</div><div class="line">                d[v] = d[u] + G[u][i].w;</div><div class="line">                que.push(pii(d[v], v));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return -1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef LOCAL</div><div class="line">	//freopen("in.txt", "r", stdin);</div><div class="line">	//freopen("out.txt", 'w', stdout);</div><div class="line">#endif</div><div class="line">    scanf("%d%d", &amp;T, &amp;N);</div><div class="line">    for (int i = 0; i &lt; T; i++) &#123;</div><div class="line">        int u, v, c;</div><div class="line">        scanf("%d%d%d", &amp;u, &amp;v, &amp;c);</div><div class="line">        G[u].push_back(Edge(v, c));</div><div class="line">        G[v].push_back(Edge(u, c));</div><div class="line">    &#125;</div><div class="line">    int ans = dij();</div><div class="line">    printf("%d\n", ans);</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 2387&lt;br&gt;给个无向图，求1到n的最短距离&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;最短路裸题，随便跑个sfpa或者djikstra就好&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="最短路" scheme="http://luoxinchen.me/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-m</title>
    <link href="http://luoxinchen.me/2016/09/09/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-m/"/>
    <id>http://luoxinchen.me/2016/09/09/暑期集训-7-4-m/</id>
    <published>2016-09-09T02:49:40.000Z</published>
    <updated>2016-09-09T03:10:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 3401<br>知道第i天股票的买卖价格(APi, BPi), 和第i天最多能够买卖的数量(ASi, BSi).两个交易日之间必须相隔W天，任何时间不能拥有超过MaxP只股票。<br><a id="more"></a></p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>$$dp[i][j]$$ 表示第i天，拥有j只股票，最多能够赚多少钱。可以很容易推出<br>$dp[i][j] = max(dp[i-1][j], max(dp[r][k] - APi[i]<em>(j-k))(0&lt;r&lt;i-w,k&lt;j),max(dp[r][k]+BPi[i]</em>(k-j))(0<r<i-w,k>j))$<br>但是这个dp复杂度不够，然后我们可以发现通过化简，$dp[i-w-1] - APi[i]<em>(j-k) = dp[i-w-1][k] + APi[i][k] + APi[i]</em>k-APi[i]*j$ (k &lt; j),可以发现这个式子可以用单调队列优化。</r<i-w,k></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>/<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong><br> <em>Author        :mathon
 </em>Email         :luoxinchen96@gmail.com<br><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>/</p>
<p>#include <cstdio></cstdio></p>
<p>#include <cstring></cstring></p>
<p>#include <iostream></iostream></p>
<p>#include <algorithm></algorithm></p>
<p>#include <vector></vector></p>
<p>#include <queue></queue></p>
<p>#include <set></set></p>
<p>#include <map></map></p>
<p>#include <string></string></p>
<p>#include <cmath></cmath></p>
<p>#include <cstdlib></cstdlib></p>
<p>#include <ctime></ctime></p>
<p>#include <stack><br>using namespace std;<br>typedef pair<int, int=""> pii;<br>typedef long long ll;<br>typedef unsigned long long ull;</int,></stack></p>
<p>#define xx first</p>
<p>#define lowbit(x) (x&amp;-x)</p>
<p>#define yy second</p>
<p>#define pr(x) cout &lt;&lt; #x &lt;&lt; “ “ &lt;&lt; x &lt;&lt; “ “</p>
<p>#define prln(x) cout &lt;&lt; #x &lt;&lt; “ “ &lt;&lt; x &lt;&lt; endl<br>const ll inf = 0x3fffffff;<br>const int maxn = 2000 + 5;<br>int dp[maxn][maxn];</p>
<p>int ap[maxn], bp[maxn], as[maxn], bs[maxn];<br>int T, MaxP, W;<br>int que[maxn], head, tail;<br>int main(void) {</p>
<p>#ifdef MATHON<br>    //freopen(“in.txt”, “r”, stdin);<br>    //freopen(“out.txt”, “w”, stdout);</p>
<p>#endif<br>    int cas; scanf(“%d”, &amp;cas);<br>    while(cas–) {<br>        scanf(“%d%d%d”, &amp;T, &amp;MaxP, &amp;W);<br>        for (int i = 1; i &lt;= T; i++) {<br>            scanf(“%d%d%d%d”, &amp;ap[i], &amp;bp[i], &amp;as[i], &amp;bs[i]);<br>        }<br>        for (int i = 0; i &lt;= T; i++) {<br>            for (int j = 0; j &lt;= MaxP; j++) {<br>                dp[i][j] = -inf;<br>            }<br>        }</p>
<pre><code>    for (int i = 1; i &lt;= W + 1; i++) {
        for (int j = 0; j &lt;= as[i]; j++) {
            dp[i][j] = max(dp[i][j], -ap[i] * j);
        }
    }

    for (int i = 2; i &lt;= T; i++) {
        for (int j = 0; j &lt;= MaxP; j++) {
            dp[i][j] = max(dp[i][j], dp[i-1][j]);
        }
        if (i &gt; W + 1) {
            head = tail = 0;
            for (int j = 0; j &lt;= MaxP; j++) {
                while(tail &gt; head &amp;&amp; que[tail-1] &lt; dp[i-W-1][j] + ap[i] * j) tail--;
                que[tail++] = dp[i-W-1][j] + ap[i] * j;
                dp[i][j] = max(dp[i][j], que[head] - ap[i] * j);
                if(j - as[i] &gt;= 0) {
                    if(que[head] == dp[i-W-1][j-as[i]] + ap[i] * (j-as[i])) head++;
                }
            }

            head = tail = 0;
            for (int j = MaxP; j &gt;= 0; j--) {
                while(tail &gt; head &amp;&amp; que[tail-1] &lt; dp[i-W-1][j] + bp[i] * j) tail--;
                que[tail++] = dp[i-W-1][j] + bp[i] * j;
                dp[i][j] = max(dp[i][j], que[head] - bp[i] * j);
                if(j + bs[i] &lt;= MaxP) {
                    if(que[head] == dp[i-W-1][j+bs[i]] + bp[i] * (j+bs[i])) head++;
                }
            }
        }
    }
    int ans = 0;
    for (int j = 0; j &lt;= MaxP; j++) {
        ans = max(ans, dp[T][j]);
    }
    cout &lt;&lt; ans &lt;&lt; endl;
}
return 0;
</code></pre><p>}<br>```</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 3401&lt;br&gt;知道第i天股票的买卖价格(APi, BPi), 和第i天最多能够买卖的数量(ASi, BSi).两个交易日之间必须相隔W天，任何时间不能拥有超过MaxP只股票。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="DP" scheme="http://luoxinchen.me/tags/DP/"/>
    
      <category term="单调队列" scheme="http://luoxinchen.me/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-l</title>
    <link href="http://luoxinchen.me/2016/09/09/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-l/"/>
    <id>http://luoxinchen.me/2016/09/09/暑期集训-7-4-l/</id>
    <published>2016-09-09T02:39:46.000Z</published>
    <updated>2016-09-09T02:46:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>n行m列棋盘放k个石子。问第一行,第一列,最后一行,最后一列必须有石子有多少种放法。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>2^n 容斥一下<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define yy second</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int mod = 1000007;</div><div class="line">const int maxn = 500 + 5;</div><div class="line">int C[maxn][maxn];</div><div class="line"></div><div class="line">void init() &#123;</div><div class="line">    for (int i = 0; i &lt; maxn; i++) &#123;</div><div class="line">        C[i][0] = 1; C[i][i] = 1;</div><div class="line">    &#125;</div><div class="line">    for (int i = 2; i &lt; maxn; i++) &#123;</div><div class="line">        for (int j = 1; j &lt; i; j++) &#123;</div><div class="line">            C[i][j] = (C[i-1][j-1] + C[i-1][j]) % mod;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int N, M, K;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    init();</div><div class="line">    int T;</div><div class="line">    scanf("%d", &amp;T);</div><div class="line">    for (int Cas = 1; Cas &lt;= T; Cas++) &#123;</div><div class="line">        scanf("%d%d%d", &amp;N, &amp;M, &amp;K);</div><div class="line">        int ans = 0;</div><div class="line">        for (int mask = 1; mask &lt; 16; mask++) &#123;</div><div class="line">            int r = N, c = M, b = 0;</div><div class="line">            if(mask &amp; 1) r--, b++;</div><div class="line">            if(mask &amp; 2) r--, b++;</div><div class="line">            if(mask &amp; 4) c--, b++;</div><div class="line">            if(mask &amp; 8) c--, b++;</div><div class="line">            if(b % 2 == 1) &#123;</div><div class="line">                ans = (ans + C[r * c][K] + mod) % mod;</div><div class="line">            &#125; else &#123;</div><div class="line">                ans = (ans + mod - C[r * c][K]) % mod;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        // prln(ans);</div><div class="line">        ans = ((C[N*M][K] - ans) % mod + mod) % mod;</div><div class="line">        printf("Case %d: %d\n", Cas, ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;n行m列棋盘放k个石子。问第一行,第一列,最后一行,最后一列必须有石子有多少种放法。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;2^n 容斥一下&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="UVA" scheme="http://luoxinchen.me/tags/UVA/"/>
    
      <category term="容斥" scheme="http://luoxinchen.me/tags/%E5%AE%B9%E6%96%A5/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-k</title>
    <link href="http://luoxinchen.me/2016/09/06/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-k/"/>
    <id>http://luoxinchen.me/2016/09/06/暑期集训-7-4-k/</id>
    <published>2016-09-06T09:05:24.000Z</published>
    <updated>2016-09-09T03:43:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>从[1,n]中选3个数，问能组成多少个三角形。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>简单组合计数，推出公式就好了<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; " " </div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line"></div><div class="line">const int maxn = 1e6 + 5;</div><div class="line">ll f[maxn];</div><div class="line">ll c(ll x) &#123;</div><div class="line">    return ((x - 2) * (x - 1) / 2 - (x - 1) / 2) / 2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void init() &#123;</div><div class="line">    f[3] = 0;</div><div class="line">    for (int i = 4; i &lt; maxn; i++) &#123;</div><div class="line">        f[i] = f[i - 1] + c(i);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int main() &#123;</div><div class="line">#ifdef LOCAL</div><div class="line">	//freopen("in.txt", "r", stdin);</div><div class="line">	//freopen("out.txt", 'w', stdout);</div><div class="line">#endif</div><div class="line">    init();</div><div class="line">    int n;</div><div class="line">    while(cin &gt;&gt; n &amp;&amp; n &gt;= 3) &#123;</div><div class="line">        printf("%lld\n", f[n]);</div><div class="line">    &#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;从[1,n]中选3个数，问能组成多少个三角形。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;简单组合计数，推出公式就好了&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="UVA" scheme="http://luoxinchen.me/tags/UVA/"/>
    
      <category term="数学" scheme="http://luoxinchen.me/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-h</title>
    <link href="http://luoxinchen.me/2016/09/06/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-h/"/>
    <id>http://luoxinchen.me/2016/09/06/暑期集训-7-4-h/</id>
    <published>2016-09-06T05:14:13.000Z</published>
    <updated>2016-09-06T05:46:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有n条鱼，每条鱼有一个权值vi,给个01矩阵，如果G[i][j]=1，那么第i条鱼可以攻击第j条鱼，并获得价值vi xor vj，每条鱼只能攻击一次。求能够最获得的最大价值和</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>很明显的最大权二分图匹配，对于G[i][j]=1,对i， j连边，边权为vi ^ vj，跑次KM算法。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 250;</div><div class="line">const int maxm = 25005;</div><div class="line">const int inf= 0x3f3f3f3f;</div><div class="line">char s[200];</div><div class="line">int a[maxn],mat[maxn][maxn];</div><div class="line">struct Edge&#123;</div><div class="line">	int to,next,cap,flow,cost;</div><div class="line">&#125;edge[maxm];</div><div class="line">int head[maxn],tot;</div><div class="line">int pre[maxn],dis[maxn];</div><div class="line">bool vis[maxn];int N;</div><div class="line">void init(int n)&#123;</div><div class="line">	N=n;</div><div class="line">	tot=0;</div><div class="line">	memset(head,-1,sizeof(head));</div><div class="line">&#125;</div><div class="line">void addedge(int u,int v,int cap,int cost)&#123;</div><div class="line">	edge[tot].to=v;</div><div class="line">	edge[tot].cap=cap;</div><div class="line">	edge[tot].cost=cost;</div><div class="line">	edge[tot].flow=0;</div><div class="line">	edge[tot].next=head[u];</div><div class="line">	head[u]=tot++;</div><div class="line">	edge[tot].to=u;</div><div class="line">	edge[tot].cap=0;</div><div class="line">	edge[tot].cost=-cost;</div><div class="line">	edge[tot].flow=0;</div><div class="line">	edge[tot].next=head[v];</div><div class="line">	head[v]=tot++; </div><div class="line">&#125; </div><div class="line">bool spfa(int s,int t)&#123;</div><div class="line">	queue&lt;int&gt; q;</div><div class="line">	for(int i=0;i&lt;N;i++)&#123;</div><div class="line">		dis[i]=inf;</div><div class="line">		vis[i]=false;</div><div class="line">		pre[i]=-1;</div><div class="line">	&#125; dis[s]=0;</div><div class="line">	vis[s]=true;</div><div class="line">	q.push(s);</div><div class="line">	while(!q.empty())&#123;</div><div class="line">		int u=q.front();</div><div class="line">		q.pop();</div><div class="line">		vis[u]=false;</div><div class="line">		for(int i=head[u];i!=-1;i=edge[i].next)&#123;</div><div class="line">			int v=edge[i].to;</div><div class="line">			if(edge[i].cap&gt;edge[i].flow&amp;&amp;dis[v]&gt;dis[u]+edge[i].cost)&#123;</div><div class="line">				dis[v]=dis[u]+edge[i].cost;</div><div class="line">				pre[v]=i;</div><div class="line">				if(!vis[v])&#123;</div><div class="line">					vis[v]=true;</div><div class="line">					q.push(v);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;if(pre[t]==-1) return false;</div><div class="line">	else return true;</div><div class="line">&#125;</div><div class="line">int mincostmaxflow(int s,int t,int &amp;cost)&#123;</div><div class="line">	int flow=0;</div><div class="line">	cost=0;</div><div class="line">	while(spfa(s,t))&#123;</div><div class="line">		int Min=inf;</div><div class="line">		for(int i=pre[t];i!=-1;i=pre[edge[i^1].to])&#123;</div><div class="line">			if(Min&gt;edge[i].cap-edge[i].flow) Min=edge[i].cap-edge[i].flow;</div><div class="line">		&#125;for(int i=pre[t];i!=-1;i=pre[edge[i^1].to])&#123;</div><div class="line">			edge[i].flow+=Min;</div><div class="line">			edge[i^1].flow-=Min;</div><div class="line">			cost+=edge[i].cost*Min;</div><div class="line">		&#125;flow+=Min;</div><div class="line">	&#125;return flow;</div><div class="line">&#125;</div><div class="line"></div><div class="line">char str[maxn];</div><div class="line"></div><div class="line">int A[maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int n;</div><div class="line">    while(scanf("%d", &amp;n) == 1 &amp;&amp; n) &#123;</div><div class="line">        int s = 0, t = 2 * n + 1;</div><div class="line">        init(2*n + 2);</div><div class="line">        for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf("%d", &amp;A[i]);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            addedge(s, i, 1, 0);</div><div class="line">            addedge(i, t, 1, 0);</div><div class="line">            addedge(i + n, t, 1, 0);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf("%s", str + 1);</div><div class="line">            for (int j = 1; j &lt;= n; j++) &#123;</div><div class="line">                if(str[j] == '1') &#123;</div><div class="line">                    addedge(i, j + n, 1, -(A[i]^A[j]));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int cost;</div><div class="line">        mincostmaxflow(s, t, cost);</div><div class="line">        printf("%d\n", -cost);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;有n条鱼，每条鱼有一个权值vi,给个01矩阵，如果G[i][j]=1，那么第i条鱼可以攻击第j条鱼，并获得价值vi xor vj，每条鱼只能攻击一次。求能够最获得的最大价值和&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;很明显的最大权二分图匹配，对于G[i][j]=1,对i， j连边，边权为vi ^ vj，跑次KM算法。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="二分图匹配" scheme="http://luoxinchen.me/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-g</title>
    <link href="http://luoxinchen.me/2016/09/06/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-g/"/>
    <id>http://luoxinchen.me/2016/09/06/暑期集训-7-4-g/</id>
    <published>2016-09-06T04:39:43.000Z</published>
    <updated>2016-09-09T03:48:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>K个产奶机，C头奶牛，每个产奶机最多可供M头奶牛使用。给出产奶机和奶牛之间的距离矩阵。问如何安排使得每头奶牛都有一个产奶机，并且使得奶牛到产奶机的最远距离最短。求最短距离。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>二分最远距离，对于小于此距离的边建图，跑最大流。做法还是很裸的。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 300 + 5;</div><div class="line">const int maxv = 300 + 5;</div><div class="line">int d[maxn][maxn];</div><div class="line"></div><div class="line">struct Dinic &#123;</div><div class="line">    struct edge &#123;</div><div class="line">        int to, cap, rev; </div><div class="line">        edge() &#123;&#125;</div><div class="line">        edge(int to, int cap, int rev):to(to), cap(cap), rev(rev) &#123;&#125;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    vector&lt;edge&gt; G[maxv];</div><div class="line">    int num_v;</div><div class="line">    int level[maxv];</div><div class="line">    int iter[maxv];</div><div class="line"></div><div class="line">    void add_edge(int from, int to, int cap) &#123;</div><div class="line">        G[from].push_back(edge(to, cap, (int)G[to].size()));</div><div class="line">        G[to].push_back(edge(from, 0, (int)G[from].size() - 1));</div><div class="line">    &#125;</div><div class="line">   </div><div class="line">    void init(int num_v) &#123;</div><div class="line">        this-&gt;num_v = num_v;</div><div class="line">        for (int i = 0; i &lt;= num_v; i++) G[i].clear();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    void bfs(int s) &#123;</div><div class="line">        memset(level, -1, sizeof(level));</div><div class="line">        queue&lt;int&gt; que;</div><div class="line">        level[s] = 0;</div><div class="line">        que.push(s);</div><div class="line">        while(!que.empty()) &#123;</div><div class="line">            int v = que.front(); que.pop();</div><div class="line">            for (int i = 0; i &lt; (int)G[v].size(); i++) &#123;</div><div class="line">                edge &amp;e = G[v][i];</div><div class="line">                if (e.cap &gt; 0 &amp;&amp; level[e.to] &lt; 0) &#123;</div><div class="line">                    level[e.to] = level[v] + 1;</div><div class="line">                    que.push(e.to);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int dfs(int v, int t, int f) &#123;</div><div class="line">        if (v == t) return f;</div><div class="line">        for (int &amp;i = iter[v]; i &lt; (int)G[v].size(); i++) &#123;</div><div class="line">            edge &amp;e = G[v][i];</div><div class="line">            if (e.cap &gt; 0 &amp;&amp; level[v] &lt; level[e.to]) &#123;</div><div class="line">                int d = dfs(e.to, t, min(f, e.cap));</div><div class="line">                if( d &gt; 0) &#123;</div><div class="line">                    e.cap -= d;</div><div class="line">                    G[e.to][e.rev].cap += d;</div><div class="line">                    return d;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int max_flow(int s, int t) &#123;</div><div class="line">        int flow = 0;</div><div class="line">        for (;;) &#123;</div><div class="line">            bfs(s);</div><div class="line">            if(level[t] &lt; 0) return flow;</div><div class="line">            memset(iter, 0, sizeof(iter));</div><div class="line">            int f;</div><div class="line">            while((f = dfs(s, t, inf)) &gt; 0) &#123;</div><div class="line">                flow += f;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;dinic;</div><div class="line"></div><div class="line">int K, C, M;</div><div class="line"></div><div class="line">bool judge(int x) &#123;</div><div class="line">    int s = 0, t = K + C + 1;</div><div class="line">    dinic.init(t + 1);</div><div class="line">    for (int i = 1; i &lt;= K; i++) &#123;</div><div class="line">        dinic.add_edge(i, t, M);</div><div class="line">    &#125;</div><div class="line">    for (int i = K + 1; i &lt;= K + C; i++) &#123;</div><div class="line">        dinic.add_edge(s, i, 1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    for (int i = 1; i &lt;= K; i++) &#123;</div><div class="line">        for (int j = K + 1; j &lt;= K + C; j++) &#123;</div><div class="line">            if(d[i][j] &lt;= x) &#123;</div><div class="line">                dinic.add_edge(j, i, 1);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;    </div><div class="line">    </div><div class="line">    return dinic.max_flow(s, t) == C;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d%d%d", &amp;K, &amp;C, &amp;M) == 3) &#123;</div><div class="line">        for (int i = 1; i &lt;= K + C; i++) &#123;</div><div class="line">            for (int j = 1; j &lt;= K + C; j++) &#123;</div><div class="line">                int x; scanf("%d", &amp;x);</div><div class="line">                if(x == 0) x = inf;</div><div class="line">                d[i][j] = x;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        for (int k = 1; k &lt;= K + C; k++) &#123;</div><div class="line">            for (int i = 1; i &lt;= K + C; i++) &#123;</div><div class="line">                for (int j = 1; j &lt;= K + C; j++) &#123;</div><div class="line">                    d[i][j] = min(d[i][j], d[i][k] + d[k][j]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        int l = 0, r = inf;</div><div class="line">        while(l &lt; r - 1) &#123;</div><div class="line">            int m = (l + r) &gt;&gt; 1;</div><div class="line">            if(judge(m)) &#123;</div><div class="line">                r = m;</div><div class="line">            &#125; else l = m;</div><div class="line">        &#125;</div><div class="line">        printf("%d\n", r);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;K个产奶机，C头奶牛，每个产奶机最多可供M头奶牛使用。给出产奶机和奶牛之间的距离矩阵。问如何安排使得每头奶牛都有一个产奶机，并且使得奶牛到产奶机的最远距离最短。求最短距离。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;二分最远距离，对于小于此距离的边建图，跑最大流。做法还是很裸的。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="二分" scheme="http://luoxinchen.me/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="网络流" scheme="http://luoxinchen.me/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-f</title>
    <link href="http://luoxinchen.me/2016/09/06/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-f/"/>
    <id>http://luoxinchen.me/2016/09/06/暑期集训-7-4-f/</id>
    <published>2016-09-06T04:09:33.000Z</published>
    <updated>2016-09-06T04:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 4864<br>有n个机器，m个任务。每个机器至多能完成一个任务。每个机器有个最大运行时间xi和等级yi,对于每个任务j,只有当xi&gt;=xj,yi&gt;=yj时，机器i才能完成任务j。如果完成任务可以获得$500<em>xj+2</em>yj$的金钱。问最多可以完成几个任务，出现多种情况时，最多能获得多少金钱。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>贪心。讲任务按照二元组(x,y)，从大到小排序，机器按照y值不同装入不同的桶里，对于每个桶按照x从小到大排序。然后贪心的对任务和机器配对。<br>证明:对于当前任务j,机器i,如果存在其他任务(xk, yk)能够使用此机器，那么xj&gt;=xk，则当前任务获得金钱更多，如果不存在任务(xk, yk)能够使用此机器，那么当前完成任务数更多。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; &quot; &quot; &lt;&lt; x &lt;&lt; &quot; &quot;</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; &quot; &quot; &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1e5 + 7;</div><div class="line">const int maxy = 100 + 5;</div><div class="line">int sta[maxy][maxn];</div><div class="line">int pos[maxy];</div><div class="line">pii task[maxn];</div><div class="line">int N, M;</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</div><div class="line">    //freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</div><div class="line">#endif</div><div class="line">    while(scanf(&quot;%d%d&quot;, &amp;N, &amp;M) == 2) &#123;</div><div class="line">        memset(pos, 0, sizeof(pos));</div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            int x, y; scanf(&quot;%d%d&quot;, &amp;x, &amp;y);</div><div class="line">            sta[y][pos[y]++] = x;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">            int x, y; scanf(&quot;%d%d&quot;, &amp;x, &amp;y);</div><div class="line">            task[i] = pii(x, y);</div><div class="line">        &#125;</div><div class="line">        for (int i = 0; i &lt; maxy; i++) &#123;</div><div class="line">            sort(sta[i], sta[i] + pos[i]);</div><div class="line">        &#125;</div><div class="line">        sort(task, task + M, greater&lt;pii&gt;() );</div><div class="line"></div><div class="line">        ll num = 0, money = 0;</div><div class="line">        for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">            int x = task[i].xx, y = task[i].yy;</div><div class="line">            for (int j = y; j &lt;= 100; j++) &#123;</div><div class="line">                if(pos[j] &gt; 0 &amp;&amp; sta[j][pos[j] - 1] &gt;= x) &#123;</div><div class="line">                    num++;</div><div class="line">                    money += x * 500 + 2 * y;</div><div class="line">                    pos[j]--;</div><div class="line">                    break;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cout &lt;&lt; num &lt;&lt; &quot; &quot; &lt;&lt; money &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 4864&lt;br&gt;有n个机器，m个任务。每个机器至多能完成一个任务。每个机器有个最大运行时间xi和等级yi,对于每个任务j,只有当xi&amp;gt;=xj,yi&amp;gt;=yj时，机器i才能完成任务j。如果完成任务可以获得$500&lt;em&gt;xj+2&lt;/em&gt;yj$的金钱。问最多可以完成几个任务，出现多种情况时，最多能获得多少金钱。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;贪心。讲任务按照二元组(x,y)，从大到小排序，机器按照y值不同装入不同的桶里，对于每个桶按照x从小到大排序。然后贪心的对任务和机器配对。&lt;br&gt;证明:对于当前任务j,机器i,如果存在其他任务(xk, yk)能够使用此机器，那么xj&amp;gt;=xk，则当前任务获得金钱更多，如果不存在任务(xk, yk)能够使用此机器，那么当前完成任务数更多。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="贪心" scheme="http://luoxinchen.me/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-e</title>
    <link href="http://luoxinchen.me/2016/09/06/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-e/"/>
    <id>http://luoxinchen.me/2016/09/06/暑期集训-7-4-e/</id>
    <published>2016-09-06T03:04:14.000Z</published>
    <updated>2016-09-09T03:48:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给两个字符串，有四种操作，添加，删除，修改，复制。问把第一个字符串转化为第二个的最少步数。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>贪心<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; " " </div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">int main() &#123;</div><div class="line">#ifdef LOCAL</div><div class="line">	//freopen("in.txt", "r", stdin);</div><div class="line">	//freopen("out.txt", 'w', stdout);</div><div class="line">#endif</div><div class="line">    string s1, s2;</div><div class="line">    while(cin &gt;&gt; s1 &gt;&gt; s2) &#123;</div><div class="line">        int len1 = (int)s1.size(), len2 = (int)s2.size();</div><div class="line">        if(len1 &gt; len2) &#123;</div><div class="line">            int d = len1 - len2;</div><div class="line">            for (int i = 0; i &lt; d; i++) &#123;</div><div class="line">                printf("d %c\n", s1[i]);</div><div class="line">            &#125;</div><div class="line">            for (int i = 0; i &lt; len2; i++) &#123;</div><div class="line">                printf("m %c\n", s2[i]);</div><div class="line">            &#125;</div><div class="line">        &#125; else &#123;</div><div class="line">            int d = len2 - len1;</div><div class="line">            for (int i = 0; i &lt; d; i++) &#123;</div><div class="line">                printf("a %c\n", s2[i]);</div><div class="line">            &#125;</div><div class="line">            for (int i = d; i &lt; len2; i++) &#123;</div><div class="line">                printf("m %c\n", s2[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给两个字符串，有四种操作，添加，删除，修改，复制。问把第一个字符串转化为第二个的最少步数。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;贪心&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="贪心" scheme="http://luoxinchen.me/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-d</title>
    <link href="http://luoxinchen.me/2016/09/05/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-d/"/>
    <id>http://luoxinchen.me/2016/09/05/暑期集训-7-4-d/</id>
    <published>2016-09-05T08:59:44.000Z</published>
    <updated>2016-09-09T03:48:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给一个n*m的矩阵，其中随着时间增长会出现一些障碍，问矩阵上端和下端开始隔开的时间</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><ol>
<li>二分时间，判断是否联通</li>
<li>并查集</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><a id="more"></a>
<p>并查集代码:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; " " </div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line"></div><div class="line">const int maxn = 500 + 5;</div><div class="line">int mp[maxn][maxn];</div><div class="line">struct DSU &#123;</div><div class="line">    int par[maxn*maxn], n;</div><div class="line">    void init(int n) &#123;</div><div class="line">        this-&gt;n = n;</div><div class="line">        for (int i = 0; i &lt;= n; i++) &#123;</div><div class="line">            par[i] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int find(int x) &#123;</div><div class="line">        return x == par[x] ? x : par[x] = find(par[x]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void merge(int a, int b) &#123;</div><div class="line">        a = find(a), b = find(b);</div><div class="line">        par[b] = a;</div><div class="line">    &#125;</div><div class="line">&#125;dsu;</div><div class="line"></div><div class="line">int T, N, M, Q;</div><div class="line">char str[maxn];</div><div class="line"></div><div class="line">const int dx[] = &#123;-1, 1, 0, 0&#125;;</div><div class="line">const int dy[] = &#123;0, 0, -1, 1&#125;;</div><div class="line"></div><div class="line">int id(int x, int y) &#123;</div><div class="line">    return x * M + y + 1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int s, t;</div><div class="line">void work(int x, int y) &#123;</div><div class="line">    if(x == 0) &#123;</div><div class="line">        dsu.merge(s, id(x, y));</div><div class="line">    &#125;</div><div class="line">    if(x == N - 1) &#123;</div><div class="line">        dsu.merge(t, id(x, y));</div><div class="line">    &#125;</div><div class="line">    for (int i = 0; i &lt; 4; i++) &#123;</div><div class="line">        int nx = x + dx[i], ny = y + dy[i];</div><div class="line">        if(nx &gt;= 0 &amp;&amp; nx &lt; N &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; M) &#123;</div><div class="line">            if(mp[nx][ny] == 0) &#123;</div><div class="line">                dsu.merge(id(x, y), id(nx, ny));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int qx[maxn*maxn], qy[maxn*maxn];</div><div class="line"></div><div class="line">int main() &#123;</div><div class="line">#ifdef LOCAL</div><div class="line">	//freopen("in.txt", "r", stdin);</div><div class="line">	//freopen("out.txt", 'w', stdout);</div><div class="line">#endif</div><div class="line">    scanf("%d", &amp;T);</div><div class="line">    while(T--) &#123;</div><div class="line">        scanf("%d%d", &amp;N, &amp;M);</div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            scanf("%s", str);</div><div class="line">            for (int j = 0; j &lt; M; j++) &#123;</div><div class="line">                mp[i][j] = str[j] - '0';</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        scanf("%d", &amp;Q);</div><div class="line">        for (int i = 1; i &lt;= Q; i++) &#123;</div><div class="line">            scanf("%d%d", &amp;qx[i], &amp;qy[i]);</div><div class="line">            mp[qx[i]][qy[i]] = 1;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        dsu.init(N*M + 1);</div><div class="line">        s = 0, t = N * M + 1;</div><div class="line">            </div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            for (int j = 0; j &lt; M; j++) &#123;</div><div class="line">                if(mp[i][j] == 0) &#123;</div><div class="line">                    work(i, j);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        if(dsu.find(s) == dsu.find(t)) &#123;</div><div class="line">            printf("-1\n");</div><div class="line">        &#125; else &#123;</div><div class="line">            int i;</div><div class="line">            for (i = Q; i &gt;= 1; i--) &#123;</div><div class="line">                mp[qx[i]][qy[i]] = 0;</div><div class="line">                work(qx[i], qy[i]);</div><div class="line">                if(dsu.find(s) == dsu.find(t)) &#123;</div><div class="line">                    printf("%d\n", i);</div><div class="line">                    break;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(i == 0) &#123;</div><div class="line">                printf("0\n");</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给一个n*m的矩阵，其中随着时间增长会出现一些障碍，问矩阵上端和下端开始隔开的时间&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;二分时间，判断是否联通&lt;/li&gt;
&lt;li&gt;并查集&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="并查集" scheme="http://luoxinchen.me/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="二分" scheme="http://luoxinchen.me/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-c</title>
    <link href="http://luoxinchen.me/2016/09/05/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-c/"/>
    <id>http://luoxinchen.me/2016/09/05/暑期集训-7-4-c/</id>
    <published>2016-09-05T08:32:39.000Z</published>
    <updated>2016-09-09T03:48:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 2912<br>n个人玩石头剪刀布，其中有一个人是裁判，剩下的人分成3组，每一组的人出同一手形，裁判可以人溢出。问能否判断谁是裁判。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>枚举裁判，并查集判断</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><a id="more"></a>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; " " </div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " = " &lt;&lt; x &lt;&lt; endl</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line"></div><div class="line">const int maxn = 500 + 5;</div><div class="line">const int maxm = 2000 + 5;</div><div class="line">struct DSU &#123;</div><div class="line">    int par[maxn], r[maxn], n;</div><div class="line">    void init(int n) &#123;</div><div class="line">        this-&gt;n = n;</div><div class="line">        for (int i = 0; i &lt;= n; i++) &#123;</div><div class="line">            par[i] = i; r[i] = 0;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    int find(int x) &#123;</div><div class="line">        if(x != par[x]) &#123;</div><div class="line">            int fx = par[x];</div><div class="line">            par[x] = find(par[x]);</div><div class="line">            r[x] = (r[x] + r[fx]) % 3;</div><div class="line">        &#125;</div><div class="line">        return par[x];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    bool merge(int x, int y, int t) &#123;</div><div class="line">        int fx = find(x), fy = find(y);</div><div class="line">        if(fx == fy) &#123;</div><div class="line">            if((r[y] + t) % 3 != r[x]) return false;</div><div class="line">            else return true;</div><div class="line">        &#125; else &#123;</div><div class="line">            par[fx] = fy;</div><div class="line">            r[fx] = (r[y] -r[x] + t + 3) % 3;</div><div class="line">            return true;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;dsu;</div><div class="line"></div><div class="line">int N, M;</div><div class="line">int err[maxn], maxerr, cnt;</div><div class="line">int U[maxm], V[maxm], T[maxm];</div><div class="line">int main() &#123;</div><div class="line">#ifdef LOCAL</div><div class="line">	//freopen("in.txt", "r", stdin);</div><div class="line">	//freopen("out.txt", 'w', stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d%d", &amp;N, &amp;M) != EOF) &#123;</div><div class="line">        for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">            char c;</div><div class="line">            // scanf("%d%c%d", &amp;U[i], &amp;c, &amp;V[i]);</div><div class="line">            scanf("%d", &amp;U[i]);</div><div class="line">            while((c = getchar()) == ' ');</div><div class="line">            scanf("%d", &amp;V[i]);</div><div class="line">            if(c == '=') T[i] = 0;</div><div class="line">            if(c == '&lt;') T[i] = 1;</div><div class="line">            if(c == '&gt;') T[i] = 2;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        maxerr = 0, cnt = 0;</div><div class="line">        int res = 0;</div><div class="line">        memset(err, -1, sizeof(err));</div><div class="line">        for (int judge = 0; judge &lt; N; judge++) &#123;</div><div class="line">            dsu.init(N);</div><div class="line">            for (int i = 0; i &lt; M; i++) &#123;</div><div class="line">                int x = U[i], y = V[i], t = T[i];</div><div class="line">                if(x == judge || y == judge) continue;</div><div class="line">                if(!dsu.merge(x, y, t)) &#123;</div><div class="line">                    err[judge] = i + 1;</div><div class="line">                    maxerr = max(maxerr, err[judge]);</div><div class="line">                    break;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(err[judge] == -1) &#123;</div><div class="line">                cnt++;</div><div class="line">                res = judge;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if(cnt == 0) &#123;</div><div class="line">            printf("Impossible\n");</div><div class="line">        &#125; else if(cnt == 1) &#123;</div><div class="line">            printf("Player %d can be determined to be the judge after %d lines\n", res, maxerr);</div><div class="line">        &#125; else if(cnt &gt; 1) &#123;</div><div class="line">            printf("Can not determine\n");</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 2912&lt;br&gt;n个人玩石头剪刀布，其中有一个人是裁判，剩下的人分成3组，每一组的人出同一手形，裁判可以人溢出。问能否判断谁是裁判。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;枚举裁判，并查集判断&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="DSU" scheme="http://luoxinchen.me/tags/DSU/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-4-b</title>
    <link href="http://luoxinchen.me/2016/09/05/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-4-b/"/>
    <id>http://luoxinchen.me/2016/09/05/暑期集训-7-4-b/</id>
    <published>2016-09-05T07:40:39.000Z</published>
    <updated>2016-09-09T03:49:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>SOJ 3596<br>KMP 水题<br><a id="more"></a></p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>kmp</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int mod = 835672545;</div><div class="line">const int maxn = 1000 + 5;</div><div class="line">char words[maxn][maxn];</div><div class="line">char str[maxn];</div><div class="line">int match[maxn][maxn];</div><div class="line">int n;</div><div class="line">int dp[maxn];</div><div class="line">int wordlen[maxn];</div><div class="line">int lenstr;</div><div class="line"></div><div class="line">struct KMP &#123;</div><div class="line">    int nxt[maxn];</div><div class="line">    void get_next(int words_num) &#123;</div><div class="line">        char *s = words[words_num];</div><div class="line">        int len = wordlen[words_num];</div><div class="line">        int i, k;</div><div class="line">        nxt[0] = k = -1;</div><div class="line">        for (i = 0; i &lt; len;) &#123;</div><div class="line">            if(k == -1 || s[i] == s[k]) &#123;</div><div class="line">                k++; i++;</div><div class="line">                nxt[i] = k;</div><div class="line">            &#125; else k = nxt[k];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void solve(int words_num) &#123;</div><div class="line">        char *w = words[words_num];</div><div class="line">        int lw = wordlen[words_num], lstr = lenstr;</div><div class="line">        int j = 0;</div><div class="line">        for (int i = 0; i &lt; lstr;) &#123;</div><div class="line">            if(j == -1 || w[j] ==str[i]) &#123;</div><div class="line">                i++; j++;</div><div class="line">                if(j == lw) &#123;</div><div class="line">                    match[words_num][i-1] = 1;</div><div class="line">                    j = nxt[j];</div><div class="line">                    // pr(j);</div><div class="line">                    // pr(words_num), prln(i);</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                j = nxt[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;kmp;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T; scanf("%d", &amp;T);</div><div class="line">    for (int Cas = 1; Cas &lt;= T; Cas++) &#123;</div><div class="line">        scanf("%d", &amp;n);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            scanf("%s", words[i]);</div><div class="line">            wordlen[i] = strlen(words[i]);</div><div class="line">        &#125;</div><div class="line">        scanf("%s", str);</div><div class="line">        lenstr = strlen(str);</div><div class="line">        memset(match, 0, sizeof(match));</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            kmp.get_next(i);</div><div class="line">            kmp.solve(i);</div><div class="line">        &#125;</div><div class="line">        memset(dp, 0, sizeof(dp));</div><div class="line">        dp[0] = 1;</div><div class="line">        int len = strlen(str);</div><div class="line">        for (int i = 1; i &lt;= len; i++) &#123;</div><div class="line">            for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">                if(match[j][i-1]) &#123;</div><div class="line">                    dp[i] = (dp[i] + dp[i-wordlen[j]]) % mod;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("%d\n", dp[len]);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;SOJ 3596&lt;br&gt;KMP 水题&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="LightOJ" scheme="http://luoxinchen.me/tags/LightOJ/"/>
    
  </entry>
  
</feed>
