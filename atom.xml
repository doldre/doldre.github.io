<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xinchen&#39;s Blog</title>
  <subtitle>For you thousands of times.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://luoxinchen.me/"/>
  <updated>2016-09-11T07:47:07.000Z</updated>
  <id>http://luoxinchen.me/</id>
  
  <author>
    <name>Xinchen Luo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>暑期集训-7-11-i</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-11-i/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-11-i/</id>
    <published>2016-09-11T07:37:37.000Z</published>
    <updated>2016-09-11T07:47:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 4778<br>有G种颜色，B个背包，每个背包有n个宝石，颜色分别为ci.两人轮流取背包放到公共容器里面，当容器有s个相同颜色宝石时，这s个宝石就会融合成一个魔法师。当选手这一步操作产生魔法师时，选手可以再选一个背包，直到不产生魔法石，每个背包只能用一次。每个选手都会尽量使自己得到的魔法师最多，求先手得到的魔法师-后手得到的模仿是</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>因为数据比较小，考虑状态压缩，当我们知道还剩下哪些背包，我们可以算出已经合成了多少个魔法石，容器里各个颜色还有多少个，所以我们dp[mask]表示还剩下的背包状态，当前先手最多可以获得多少个魔法石，对手能获得的魔法石=已经产生的魔法石-dp[mask],然后dp一下即可。还是很有趣的一个题目<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line"></div><div class="line">const int maxb = 21;</div><div class="line">const int maxg = 8;</div><div class="line">const int maxn = 10;</div><div class="line">int G, B, S;</div><div class="line">int dp[1&lt;&lt;maxb];</div><div class="line">int bags[maxb][maxn];</div><div class="line">int colors[maxg];</div><div class="line">int tot;</div><div class="line">int dfs(int mask) &#123;</div><div class="line">    // pr(mask); prln(turn);</div><div class="line">    //turn: </div><div class="line">    if(dp[mask] != -1) return dp[mask];</div><div class="line">    int already_have = 0;</div><div class="line">    int t_colors[maxg];</div><div class="line">    memset(t_colors, 0, sizeof(t_colors));</div><div class="line">    for (int i = 0; i &lt; B; i++) &#123;</div><div class="line">        if((mask&gt;&gt;i) &amp; 1) &#123;</div><div class="line">            for (int j = 0; j &lt; G; j++) &#123;</div><div class="line">                t_colors[j] += bags[i][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    for (int i = 0; i &lt; G; i++) &#123;</div><div class="line">        already_have += t_colors[i] / S;</div><div class="line">        t_colors[i] %= S;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // prln(already_have);</div><div class="line">    int buf[maxg];</div><div class="line">    int res = 0;</div><div class="line">    for (int i = 0; i &lt; B; i++) &#123;</div><div class="line">        if(!((mask &gt;&gt; i) &amp; 1)) &#123;</div><div class="line">           memcpy(buf, t_colors, sizeof(buf));</div><div class="line">            for (int j = 0; j &lt; G; j++) &#123;</div><div class="line">                buf[j] += bags[i][j];</div><div class="line">            &#125;</div><div class="line">            int cnt_new_gems = 0;</div><div class="line">            for (int j = 0; j &lt; G; j++) &#123;</div><div class="line">                cnt_new_gems += buf[j] / S;</div><div class="line">            &#125;</div><div class="line">            if(cnt_new_gems &gt; 0) &#123;</div><div class="line">                res = max(res,  cnt_new_gems + dfs((mask|(1&lt;&lt;i))));</div><div class="line">            &#125; else &#123;</div><div class="line">                res = max(res, tot - already_have - dfs((mask|(1&lt;&lt;i))));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return dp[mask] = res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d%d%d", &amp;G, &amp;B, &amp;S) == 3 &amp;&amp; G &amp;&amp; B &amp;&amp; S) &#123;</div><div class="line">        memset(bags, 0, sizeof(bags));</div><div class="line">        memset(colors, 0, sizeof(colors));</div><div class="line">        for (int i = 0; i &lt; B; i++) &#123;</div><div class="line">            int n; scanf("%d", &amp;n);</div><div class="line">            for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">                int x; scanf("%d", &amp;x);</div><div class="line">                x--;</div><div class="line">                bags[i][x]++;</div><div class="line">                colors[x]++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        tot = 0;</div><div class="line">        for (int i = 0; i &lt; G; i++) &#123;</div><div class="line">            tot += colors[i] / S;</div><div class="line">        &#125;</div><div class="line">        memset(dp, -1, sizeof(dp));</div><div class="line">        int a = dfs(0);</div><div class="line">        int b = tot - a;</div><div class="line">        // prln(tot);</div><div class="line">        // pr(a); prln(b);</div><div class="line">        printf("%d\n", a - b);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 4778&lt;br&gt;有G种颜色，B个背包，每个背包有n个宝石，颜色分别为ci.两人轮流取背包放到公共容器里面，当容器有s个相同颜色宝石时，这s个宝石就会融合成一个魔法师。当选手这一步操作产生魔法师时，选手可以再选一个背包，直到不产生魔法石，每个背包只能用一次。每个选手都会尽量使自己得到的魔法师最多，求先手得到的魔法师-后手得到的模仿是&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;因为数据比较小，考虑状态压缩，当我们知道还剩下哪些背包，我们可以算出已经合成了多少个魔法石，容器里各个颜色还有多少个，所以我们dp[mask]表示还剩下的背包状态，当前先手最多可以获得多少个魔法石，对手能获得的魔法石=已经产生的魔法石-dp[mask],然后dp一下即可。还是很有趣的一个题目&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="dp" scheme="http://luoxinchen.me/tags/dp/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="博弈" scheme="http://luoxinchen.me/tags/%E5%8D%9A%E5%BC%88/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-11-h</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-11-h/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-11-h/</id>
    <published>2016-09-11T07:21:05.000Z</published>
    <updated>2016-09-11T07:36:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定一个序列，询问对于[l,r]之间，有多少个数字与区间内其他所有数字互质</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>用筛法预处理出每个数向左和向右最近与其不互质的数的位置L[i],R[i]。这样对于每个位置i，都对应一个区间[L[i],R[i]],对于一个询问，等价于[l,r]内，有多少个位置i,[L[i],R[i]]区间包含[l,r]。这样就转化为区间覆盖问题，对询问的R进行排序，然后从左往右扫，碰到i则i位置+1，L[i]位置-1，碰到R,贼i位置-1，L[i]位置+1，然后查询[l,r]区间和就是答案。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 2e5 + 5;</div><div class="line">struct BIT &#123;</div><div class="line">    int bit[maxn + 1];</div><div class="line">    int n;</div><div class="line">    void init(int n) &#123;</div><div class="line">        this-&gt;n = n;</div><div class="line">        memset(bit, 0, sizeof(bit));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void update(int i, int add) &#123;</div><div class="line">        for (; i &lt;= n; i += lowbit(i)) &#123;</div><div class="line">            bit[i] += add;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int sum(int i) &#123;</div><div class="line">        int res = 0;</div><div class="line">        for (; i &gt; 0; i -= lowbit(i)) &#123;</div><div class="line">            res += bit[i];</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int querry(int l, int r) &#123;</div><div class="line">        return sum(r) - sum(l - 1);</div><div class="line">    &#125;</div><div class="line">&#125;bit;</div><div class="line"></div><div class="line">struct Inter &#123;</div><div class="line">    int l, r, num;</div><div class="line">    Inter(int l, int r):l(l), r(r) &#123;&#125;</div><div class="line">    Inter() &#123;&#125;</div><div class="line">    Inter(int l, int r, int num):l(l), r(r), num(num) &#123;&#125;</div><div class="line">&#125;;</div><div class="line">            </div><div class="line">bool cmp(const Inter &amp;a, const Inter &amp;b) &#123;</div><div class="line">    return a.r &lt; b.r;</div><div class="line">&#125;</div><div class="line"></div><div class="line">vector&lt;Inter&gt; Querry, inters[3];</div><div class="line">int n, m;</div><div class="line">int cnt[3][maxn], tot[maxn];</div><div class="line">int A[maxn];</div><div class="line">bool isprime[maxn];</div><div class="line">int fact_pos[maxn];</div><div class="line">int L[maxn], R[maxn];</div><div class="line">vector&lt;int&gt; primes;</div><div class="line"></div><div class="line">void get_prime() &#123;</div><div class="line">    memset(isprime, true, sizeof(isprime));</div><div class="line">    for (int i = 2; i &lt; maxn; i++) &#123;</div><div class="line">        if(isprime[i]) &#123;</div><div class="line">            primes.push_back(i);</div><div class="line">            for (int j = i + i; j &lt; maxn; j += i) &#123;</div><div class="line">                isprime[j] = false;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void cal(int ind) &#123;</div><div class="line">    sort(inters[ind].begin(), inters[ind].end(), cmp);</div><div class="line">    bit.init(maxn-1);</div><div class="line">    for (int i = 0, j = 0; i &lt; (int)Querry.size(); i++) &#123;</div><div class="line">        for (; j &lt; (int)inters[ind].size() &amp;&amp; inters[ind][j].r &lt;= Querry[i].r; j++) &#123;</div><div class="line">            // prln("ok");</div><div class="line">            bit.update(inters[ind][j].l + 1, 1);</div><div class="line">        &#125;</div><div class="line">        cnt[ind][Querry[i].num] = bit.querry(Querry[i].l + 1, Querry[i].r + 1);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void solve() &#123;</div><div class="line">    memset(fact_pos, 0, sizeof(fact_pos));</div><div class="line">    for (int i = 1; i &lt;= n; i++) L[i] = 0;</div><div class="line">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        int x = A[i];</div><div class="line">        // prln(x);</div><div class="line">        for (int j = 0; primes[j] * primes[j] &lt;= x; j++) &#123;</div><div class="line">            if(x % primes[j] == 0) &#123;</div><div class="line">                L[i] = max(L[i], fact_pos[primes[j]]);</div><div class="line">                fact_pos[primes[j]] = i;</div><div class="line">            &#125;</div><div class="line">            while(x % primes[j] == 0) &#123;</div><div class="line">                x /= primes[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if(x &gt; 1) &#123;</div><div class="line">            L[i] = max(L[i], fact_pos[x]);</div><div class="line">            fact_pos[x] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    for (int i = 0; i &lt; maxn; i++) fact_pos[i] = n + 1;</div><div class="line">    for (int i = 1; i &lt;= n; i++) R[i] = n + 1;</div><div class="line">    for (int i = n; i &gt;= 1; i--) &#123;</div><div class="line">        int x = A[i];</div><div class="line">        for (int j = 0; primes[j] * primes[j] &lt;= x; j++) &#123;</div><div class="line">            if(x % primes[j] == 0) &#123;</div><div class="line">                R[i] = min(R[i], fact_pos[primes[j]]);</div><div class="line">                fact_pos[primes[j]] = i;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            while(x % primes[j] == 0) &#123;</div><div class="line">                x /= primes[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if(x &gt; 1) &#123;</div><div class="line">            R[i] = min(R[i], fact_pos[x]);</div><div class="line">            fact_pos[x] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        // pr(L[i]); pr(i); prln(R[i]);</div><div class="line">        inters[0].push_back(Inter(L[i], i));</div><div class="line">        inters[1].push_back(Inter(i, R[i]));</div><div class="line">        inters[2].push_back(Inter(L[i], R[i]));</div><div class="line">    &#125;</div><div class="line">    for (int i = 0; i &lt; 3; i++) &#123;</div><div class="line">        cal(i);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    get_prime();</div><div class="line">    while(scanf("%d%d", &amp;n, &amp;m) == 2 &amp;&amp; n &amp;&amp; m) &#123;</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf("%d", &amp;A[i]);</div><div class="line">        &#125;</div><div class="line">        Querry.clear();</div><div class="line">        for (int i = 0; i &lt; 3; i++) &#123;</div><div class="line">            inters[i].clear();</div><div class="line">        &#125;</div><div class="line">        for (int i = 1; i &lt;= m; i++) &#123;</div><div class="line">            int l, r;</div><div class="line">            scanf("%d%d", &amp;l, &amp;r);</div><div class="line">            Querry.push_back(Inter(l, r, i));</div><div class="line">            tot[i] = r - l + 1;</div><div class="line">        &#125;</div><div class="line">        sort(Querry.begin(), Querry.end(), cmp);</div><div class="line">        solve();</div><div class="line">        for (int i = 1; i &lt;= m; i++) &#123;</div><div class="line">            // pr(tot[i]); pr(cnt[0][i]); pr(cnt[1][i]); prln(cnt[2][i]);</div><div class="line">            printf("%d\n", tot[i] - cnt[0][i] - cnt[1][i] + cnt[2][i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给定一个序列，询问对于[l,r]之间，有多少个数字与区间内其他所有数字互质&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;用筛法预处理出每个数向左和向右最近与其不互质的数的位置L[i],R[i]。这样对于每个位置i，都对应一个区间[L[i],R[i]],对于一个询问，等价于[l,r]内，有多少个位置i,[L[i],R[i]]区间包含[l,r]。这样就转化为区间覆盖问题，对询问的R进行排序，然后从左往右扫，碰到i则i位置+1，L[i]位置-1，碰到R,贼i位置-1，L[i]位置+1，然后查询[l,r]区间和就是答案。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="BIT" scheme="http://luoxinchen.me/tags/BIT/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-11-g</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-11-g/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-11-g/</id>
    <published>2016-09-11T07:08:51.000Z</published>
    <updated>2016-09-11T07:20:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 4776<br>给一颗树，定义两点之间的距离为两点路径中边权的xor值，求第k大的值。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>非常棒的一道题。首先我们转化为有根树，求出每个节点u到根节点的xor值d[u]，然后任意两点之间的xor值为这两个节点到根节点xor值得xor。对所有d[u]维护一颗trie树，通过这个trie树，我们可以做到给定x，查询x xor d[u]的第k大值。首先对于所有节点u,把d[u]与其他节点v，d[u] xor d[v]的最大值丢进优先队列，然后如果d[u]的最大值弹出队列，则把d[u]的次大值丢进去，以此类推。这样就能预处理出前K个最大值。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef pair&lt;int, ll&gt; pil;</div><div class="line">typedef pair&lt;ll, int&gt; pli;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line"></div><div class="line">struct Trie &#123;</div><div class="line">    struct Node &#123;</div><div class="line">        int nxt[2], num;</div><div class="line">        void clear() &#123;</div><div class="line">            memset(nxt, -1, sizeof(nxt));</div><div class="line">            num = 0;</div><div class="line">        &#125;</div><div class="line">    &#125;nds[maxn*64];</div><div class="line">    int cnt; </div><div class="line">    void init() &#123;</div><div class="line">        nds[0].clear();</div><div class="line">        cnt = 0;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int newnode() &#123;</div><div class="line">        ++cnt;</div><div class="line">        nds[cnt].clear();</div><div class="line">        return cnt;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void insert(ll x) &#123;</div><div class="line">        int p = 0;</div><div class="line">        for (int i = 63; i &gt;= 0; i--) &#123;</div><div class="line">            int t = (x &gt;&gt; i) &amp; 1;</div><div class="line">            if(nds[p].nxt[t] == -1) &#123;</div><div class="line">                nds[p].nxt[t] = newnode();</div><div class="line">            &#125;</div><div class="line">            p = nds[p].nxt[t];</div><div class="line">            nds[p].num++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ll querry(ll x, int k) &#123;</div><div class="line">        int p = 0;</div><div class="line">        ll res = 0;</div><div class="line">        for (int i = 63; i &gt;= 0; i--) &#123;</div><div class="line">            int t = (x &gt;&gt; i) &amp; 1;</div><div class="line">            int num = 0;</div><div class="line">            if(nds[p].nxt[t^1] != -1) &#123;</div><div class="line">                num = nds[nds[p].nxt[t^1]].num;</div><div class="line">            &#125;</div><div class="line">            if(num &gt;= k) &#123;</div><div class="line">                res |= 1ll &lt;&lt; i;</div><div class="line">                p = nds[p].nxt[t^1];</div><div class="line">            &#125; else &#123;</div><div class="line">                k -= num;</div><div class="line">                p = nds[p].nxt[t];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;trie;</div><div class="line"></div><div class="line"></div><div class="line">vector&lt;pil&gt; G[maxn];</div><div class="line">ll A[maxn];</div><div class="line">int n, m;</div><div class="line"></div><div class="line">void cal(int u, int fa, ll dist) &#123;</div><div class="line">    A[u] = dist;</div><div class="line">    for (int i = 0; i &lt; (int)G[u].size(); i++) &#123;</div><div class="line">        int v = G[u][i].xx;</div><div class="line">        if(v == fa) continue;</div><div class="line">        cal(v, u, dist ^ G[u][i].yy);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">const int maxk = 2e5 + 5;</div><div class="line">ll ans[maxk];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d", &amp;n) == 1 &amp;&amp; n) &#123;</div><div class="line">        for (int i = 0; i &lt;= n; i++) G[i].clear();</div><div class="line">        for (int i = 1; i &lt;= n - 1; i++) &#123;</div><div class="line">            int u, v;</div><div class="line">            ll w;</div><div class="line">            scanf("%d%d%lld", &amp;u, &amp;v, &amp;w);</div><div class="line">            G[u].push_back(pil(v, w));</div><div class="line">            G[v].push_back(pil(u, w));</div><div class="line">        &#125;</div><div class="line">        memset(A, 0, sizeof(A));</div><div class="line">        cal(1, -1, 0);</div><div class="line">        trie.init();</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            trie.insert(A[i]);</div><div class="line">        &#125;</div><div class="line">        priority_queue&lt;pair&lt;ll, pli&gt; &gt; que;</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            ll t = trie.querry(A[i], 1);</div><div class="line">            que.push(make_pair(t, pli(A[i], 1)));</div><div class="line">        &#125;</div><div class="line">        memset(ans, -1, sizeof(ans));</div><div class="line">        int i = 1;</div><div class="line">        ll tot = ll(n) * (n - 1);</div><div class="line">        while(!que.empty() &amp;&amp; i &lt;= tot &amp;&amp; i &lt; maxk) &#123;</div><div class="line">            pair&lt;ll, pli&gt; cur = que.top(); que.pop();</div><div class="line">            ans[i++] = cur.xx;</div><div class="line">            if(cur.yy.yy == n - 1) continue;</div><div class="line">            ll t = trie.querry(cur.yy.xx, cur.yy.yy + 1);</div><div class="line">            que.push(make_pair(t, pli(cur.yy.xx, cur.yy.yy + 1)));</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        scanf("%d", &amp;m);</div><div class="line">        for (int i = 1; i &lt;= m; i++) &#123;</div><div class="line">            int x; scanf("%d", &amp;x);</div><div class="line">            cout &lt;&lt; ans[x] &lt;&lt; endl;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 4776&lt;br&gt;给一颗树，定义两点之间的距离为两点路径中边权的xor值，求第k大的值。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;非常棒的一道题。首先我们转化为有根树，求出每个节点u到根节点的xor值d[u]，然后任意两点之间的xor值为这两个节点到根节点xor值得xor。对所有d[u]维护一颗trie树，通过这个trie树，我们可以做到给定x，查询x xor d[u]的第k大值。首先对于所有节点u,把d[u]与其他节点v，d[u] xor d[v]的最大值丢进优先队列，然后如果d[u]的最大值弹出队列，则把d[u]的次大值丢进去，以此类推。这样就能预处理出前K个最大值。&lt;br&gt;
    
    </summary>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/categories/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="Trie" scheme="http://luoxinchen.me/tags/Trie/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-11-c</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-11-c/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-11-c/</id>
    <published>2016-09-11T07:05:27.000Z</published>
    <updated>2016-09-11T07:07:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 4772<br>给两个n*n的矩阵，矩阵可以旋转，问两个矩阵最多可以有多少个数匹配</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>水题<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code class="cpp">/************************************************
 *Author        :mathon
 *Email         :luoxinchen96@gmail.com
*************************************************/
#include &lt;cstdio&gt;
#include &lt;cstring&gt;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;vector&gt;
#include &lt;queue&gt;
#include &lt;set&gt;
#include &lt;map&gt;
#include &lt;string&gt;
#include &lt;cmath&gt;
#include &lt;cstdlib&gt;
#include &lt;ctime&gt;
#include &lt;stack&gt;
using namespace std;
typedef pair&lt;int, int&gt; pii;
typedef long long ll;
typedef unsigned long long ull;
#define xx first
#define lowbit(x) (x&amp;-x)
#define yy second
#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "
#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl
const int maxn = 30 + 5;
int A[maxn][maxn], B[maxn][maxn];
int n;
int cal() {
    int res = 0;
    for (int i = 0; i &lt; n; i++) {
        for (int j = 0; j &lt; n; j++) {
            if(A[i][j] == B[i][j]) {
                res++;
            }
        }
    }
    return res;
}

void turn() {
    int buf[maxn][maxn];
    for (int i = 0; i &lt; n; i++) {
        for (int j = 0; j &lt; n; j++) {
            buf[j][n - 1 - i] = A[i][j];
        }
    }
    memcpy(A, buf, sizeof(buf));
}


int main(void) {
#ifdef MATHON
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
#endif
    while(scanf("%d", &amp;n) == 1 &amp;&amp; n) {
        for (int i = 0; i &lt; n; i++) {
            for (int j = 0; j &lt; n; j++) {
                scanf("%d", &amp;A[i][j]);
            }
        }
        for (int i = 0; i &lt; n; i++) {
            for (int j = 0; j &lt; n; j++) {
                scanf("%d", &amp;B[i][j]);
            }
        }
        int ans = 0;
        for (int i = 0; i &lt; 4; i++) {
            ans = max(ans, cal());
            turn();
        }
        cout &lt;&lt; ans &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 4772&lt;br&gt;给两个n*n的矩阵，矩阵可以旋转，问两个矩阵最多可以有多少个数匹配&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;水题&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="简单题" scheme="http://luoxinchen.me/tags/%E7%AE%80%E5%8D%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-11-b</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-11-b/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-11-b/</id>
    <published>2016-09-11T07:01:11.000Z</published>
    <updated>2016-09-11T07:05:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 4771<br>有若干个宝藏，问从起点遍历过所有K个宝藏的最短时间</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>因为只有4个宝藏，所以预处理起点和4个宝藏之间两两之间的最短距离，枚举4个宝藏的遍历顺序求出答案。</p>
<a id="more"></a>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 100 + 5;</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int dx[] = &#123;-1, 1, 0, 0&#125;;</div><div class="line">const int dy[] = &#123;0, 0, -1, 1&#125;;</div><div class="line">char mp[maxn][maxn];</div><div class="line">int d[maxn*maxn];</div><div class="line">int dist[maxn*maxn][maxn*maxn];</div><div class="line">int N, M;</div><div class="line">int id(pii p) &#123;</div><div class="line">    return p.xx * M + p.yy;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int bfs(pii s, pii t) &#123;</div><div class="line">    memset(d, inf, sizeof(d));</div><div class="line">    d[id(s)] = 0;</div><div class="line">    queue&lt;pii&gt; que;</div><div class="line">    que.push(s);</div><div class="line">    while(!que.empty()) &#123;</div><div class="line">        pii cur = que.front(); que.pop();</div><div class="line">        int x = cur.xx, y = cur.yy;</div><div class="line">        if(cur == t) return d[id(cur)];</div><div class="line">        for (int dir = 0; dir &lt; 4; dir++) &#123;</div><div class="line">            int nx = x + dx[dir], ny = y + dy[dir];</div><div class="line">            if(nx &lt; 0 || nx &gt;= N || ny &lt; 0 || ny &gt;= M) continue;</div><div class="line">            if(d[id(pii(nx, ny))] &gt;= inf &amp;&amp; mp[nx][ny] == '.') &#123;</div><div class="line">                pii nxt = pii(nx, ny);</div><div class="line">                d[id(nxt)] = d[id(cur)] + 1;</div><div class="line">                que.push(nxt);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return d[id(t)];</div><div class="line">&#125;</div><div class="line"></div><div class="line">const int maxk = 4;</div><div class="line">pii T[maxk + 1];</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d%d", &amp;N, &amp;M) == 2 &amp;&amp; N &amp;&amp; M) &#123;</div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            scanf("%s", mp[i]);</div><div class="line">            for (int j = 0; j &lt; M; j++) &#123;</div><div class="line">                if(mp[i][j] == '@') &#123;</div><div class="line">                    T[0] = pii(i, j);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        int K; scanf("%d", &amp;K);</div><div class="line">        for (int i = 1; i &lt;= K; i++) &#123;</div><div class="line">            scanf("%d%d", &amp;T[i].xx, &amp;T[i].yy);</div><div class="line">            T[i].xx--; T[i].yy--;</div><div class="line">        &#125;</div><div class="line">       </div><div class="line">        for (int i = 0; i &lt;= K; i++) &#123;</div><div class="line">            for (int j = 0; j &lt;= K; j++) &#123;</div><div class="line">                if(i == j) continue;</div><div class="line">                int t = bfs(T[i], T[j]);</div><div class="line">                dist[id(T[i])][id(T[j])] = t;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int A[] = &#123;0, 1, 2, 3, 4&#125;;</div><div class="line">        int ans = inf;</div><div class="line">        do &#123;</div><div class="line">            int tmp = 0;</div><div class="line">            for (int i = 0; i &lt; K; i++) &#123;</div><div class="line">                tmp  += dist[id(T[A[i]])][id(T[A[i+1]])];</div><div class="line">            &#125;</div><div class="line">            ans = min(ans, tmp);</div><div class="line">        &#125; while(next_permutation(A + 1, A + K + 1));</div><div class="line"></div><div class="line">        if(ans == inf) ans = -1;</div><div class="line">        printf("%d\n", ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 4771&lt;br&gt;有若干个宝藏，问从起点遍历过所有K个宝藏的最短时间&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;因为只有4个宝藏，所以预处理起点和4个宝藏之间两两之间的最短距离，枚举4个宝藏的遍历顺序求出答案。&lt;/p&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="BFS" scheme="http://luoxinchen.me/tags/BFS/"/>
    
      <category term="暴力" scheme="http://luoxinchen.me/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-11-a</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-11-a/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-11-a/</id>
    <published>2016-09-11T06:55:36.000Z</published>
    <updated>2016-09-11T07:00:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 4770<br>n*m的房间，有些房间可以被破坏，给出一些L形的灯，有一个特殊的灯可以旋转，让用最少的灯覆盖所有的可破坏的区域，且不能覆盖不可破坏的区域。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>暴力枚举可以旋转灯的位置和方向，暴力枚举其他灯的位置。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 200 + 5;</div><div class="line">char mp[maxn][maxn];</div><div class="line">pii ps[maxn];</div><div class="line">int cntps;</div><div class="line">int used[maxn][maxn];</div><div class="line">int timestamp;</div><div class="line">int N, M;</div><div class="line"></div><div class="line">pii dir1[] = &#123;pii(0, 1), pii(1, 0), pii(-1, 0)&#125;;</div><div class="line">pii dir2[] = &#123;pii(1, 0), pii(0, -1), pii(0, -1)&#125;;</div><div class="line"></div><div class="line">bool legal(int x, int y) &#123;</div><div class="line">    return x &gt;= 0 &amp;&amp; x &lt; N &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; M;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int work(int mask) &#123;</div><div class="line">    timestamp++;</div><div class="line">    int cntcover = 0;</div><div class="line">    for (int i = 0; i &lt; cntps; i++) &#123;</div><div class="line">        if((mask&gt;&gt;i)&amp;1) &#123;</div><div class="line">            int x = ps[i].xx, y = ps[i].yy;</div><div class="line">            if(x - 1 &gt;= 0 &amp;&amp; mp[x-1][y] == '#') return inf;</div><div class="line">            if(x - 1 &gt;= 0 &amp;&amp; used[x-1][y] != timestamp) &#123;</div><div class="line">                used[x-1][y] = timestamp;</div><div class="line">                cntcover++;</div><div class="line">            &#125;</div><div class="line">            if(used[x][y] != timestamp) &#123;</div><div class="line">                used[x][y] = timestamp;</div><div class="line">                cntcover++;</div><div class="line">            &#125;</div><div class="line">            if(y + 1 &lt; M &amp;&amp; mp[x][y+1] == '#') return inf;</div><div class="line">            if(y + 1 &lt; M &amp;&amp; used[x][y+1] != timestamp) &#123;</div><div class="line">                used[x][y+1] = timestamp;</div><div class="line">                cntcover++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(cntcover == cntps) return __builtin_popcount(mask);</div><div class="line">    for (int i = 0; i &lt; cntps; i++) &#123;</div><div class="line">        if(((mask &gt;&gt; i) &amp; 1) == 0) &#123;</div><div class="line">            int x = ps[i].xx, y = ps[i].yy;</div><div class="line">            for (int i = 0; i &lt; 3; i++) &#123;</div><div class="line">                int t = 0;</div><div class="line">                int nx, ny;</div><div class="line">                nx = x + dir1[i].xx, ny = y + dir1[i].yy;</div><div class="line">                if(legal(nx, ny)  &amp;&amp; mp[nx][ny] == '#') continue;</div><div class="line">                if(legal(nx, ny) &amp;&amp; used[nx][ny] != timestamp) t++;</div><div class="line">                if(used[x][y] != timestamp) t++;</div><div class="line">                nx = x + dir2[i].xx, ny = y + dir2[i].yy;</div><div class="line">                if(legal(nx, ny) &amp;&amp; mp[nx][ny] == '#') continue;</div><div class="line">                if(legal(nx, ny) &amp;&amp; used[nx][ny] != timestamp) t++;</div><div class="line">                if(t + cntcover == cntps) return __builtin_popcount(mask) + 1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return inf;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%d%d", &amp;N, &amp;M) == 2 &amp;&amp; N &amp;&amp; M) &#123;</div><div class="line">        memset(used, 0, sizeof(used));</div><div class="line">        timestamp = 0;</div><div class="line">        cntps = 0;</div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            scanf("%s", mp[i]);</div><div class="line">            for (int j = 0; j &lt; M; j++) &#123;</div><div class="line">                if(mp[i][j] == '.') &#123;</div><div class="line">                    ps[cntps++] = pii(i, j);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int ans = inf; </div><div class="line">        for (int i = 0; i &lt; (1&lt;&lt;cntps); i++) &#123;</div><div class="line">            ans = min(ans, work(i));</div><div class="line">        &#125;</div><div class="line">        if(ans == inf) ans = -1;</div><div class="line">        printf("%d\n", ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 4770&lt;br&gt;n*m的房间，有些房间可以被破坏，给出一些L形的灯，有一个特殊的灯可以旋转，让用最少的灯覆盖所有的可破坏的区域，且不能覆盖不可破坏的区域。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;暴力枚举可以旋转灯的位置和方向，暴力枚举其他灯的位置。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="搜索" scheme="http://luoxinchen.me/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-8-p</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-8-p/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-8-p/</id>
    <published>2016-09-11T06:50:26.000Z</published>
    <updated>2016-09-11T06:53:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 2295<br>N个城市，M个雷达，每个雷达有自己的覆盖范围，选出K个雷达覆盖所有的城市。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>DLX 重复覆盖模板题<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line"></div><div class="line">const int maxnode = 3000;</div><div class="line">const int MaxM = 55, MaxN = 55;</div><div class="line">int K;</div><div class="line">struct DLX &#123;</div><div class="line">    int n, m, size;</div><div class="line">    int U[maxnode], D[maxnode], R[maxnode], L[maxnode];</div><div class="line">    int Row[maxnode], Col[maxnode];</div><div class="line">    int H[MaxN], S[MaxN];</div><div class="line">    int ands, ans[MaxN];</div><div class="line">    void init(int _n, int _m) &#123;</div><div class="line">        n = _n;</div><div class="line">        m = _m;</div><div class="line">        for (int i = 0; i &lt;= m; i++) &#123;</div><div class="line">            S[i] = 0;</div><div class="line">            U[i] = D[i] = i;</div><div class="line">            L[i] = i - 1;</div><div class="line">            R[i] = i + 1;</div><div class="line">        &#125;</div><div class="line">        R[m] = 0; L[0] = m;</div><div class="line">        size = m;</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            H[i] = -1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void Link(int r, int c) &#123;</div><div class="line">        ++S[Col[++size] = c];</div><div class="line">        Row[size] = r;</div><div class="line">        D[size] = D[c];</div><div class="line">        U[D[c]] = size;</div><div class="line">        U[size] = c;</div><div class="line">        D[c] = size;</div><div class="line">        if(H[r] &lt; 0) &#123;</div><div class="line">            H[r] = L[size] = R[size] = size;</div><div class="line">        &#125; else &#123;</div><div class="line">            R[size] = R[H[r]];</div><div class="line">            L[R[H[r]]] = size;</div><div class="line">            L[size] = H[r];</div><div class="line">            R[H[r]] = size;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void remove(int c) &#123;</div><div class="line">        for (int i = D[c]; i != c; i = D[i]) &#123;</div><div class="line">            L[R[i]] = L[i], R[L[i]] = R[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    void resume(int c) &#123;</div><div class="line">        for (int i = U[c]; i != c; i = U[i]) &#123;</div><div class="line">            L[R[i]] = R[L[i]] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    bool v[maxnode];</div><div class="line"></div><div class="line">    int f() &#123;</div><div class="line">        int ret = 0;</div><div class="line">        for (int c = R[0]; c != 0; c = R[c]) v[c] = true;</div><div class="line">        for (int c = R[0]; c != 0; c = R[c]) &#123;</div><div class="line">            if(v[c]) &#123;</div><div class="line">                ret++;</div><div class="line">                v[c] = false;</div><div class="line">                for (int i = D[c]; i != c; i = D[i]) &#123;</div><div class="line">                    for (int j = R[i]; j != i; j = R[j]) &#123;</div><div class="line">                        v[Col[j]] = false;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return ret;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    bool Dance(int d) &#123;</div><div class="line">        if (d + f() &gt; K) return false;</div><div class="line">        if (R[0] == 0) return d &lt;= K;</div><div class="line">        int c = R[0];</div><div class="line">        for (int i = R[0]; i != 0; i = R[i]) &#123;</div><div class="line">            if(S[i] &lt; S[c]) &#123;</div><div class="line">                c = i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int i = D[c]; i != c; i = D[i]) &#123;</div><div class="line">            remove(i);</div><div class="line">            for (int j = R[i]; j != i; j = R[j]) remove(j);</div><div class="line">            if(Dance(d + 1)) return true;</div><div class="line">            for (int j = L[i]; j != i; j = L[j]) resume(j);</div><div class="line">            resume(i);</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;dlx;</div><div class="line"></div><div class="line">const double eps = 1e-8;</div><div class="line">struct Point &#123;</div><div class="line">    int x, y;</div><div class="line">    void input() &#123;</div><div class="line">        scanf("%d%d", &amp;x, &amp;y);</div><div class="line">    &#125;</div><div class="line">&#125;city[MaxM], station[MaxN];</div><div class="line"></div><div class="line">double dis(Point a, Point b) &#123;</div><div class="line">    return sqrt(((double)(a.x - b.x)*(a.x - b.x) + (double)(a.y - b.y)*(a.y-b.y)));</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T;</div><div class="line">    int n, m;</div><div class="line">    scanf("%d", &amp;T);</div><div class="line">    while(T--) &#123;</div><div class="line">        scanf("%d%d%d", &amp;n, &amp;m, &amp;K);</div><div class="line">        for (int i = 0; i &lt; n; i++) city[i].input();</div><div class="line">        for (int i = 0; i &lt; m; i++) station[i].input();</div><div class="line">        double l = 0, r = 1e8;</div><div class="line">        while(r - l &gt;= eps) &#123;</div><div class="line">            double mid = (l + r) / 2;</div><div class="line">            dlx.init(m, n);</div><div class="line">            for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">                for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">                    if(dis(station[i], city[j]) &lt; mid - eps) &#123;</div><div class="line">                        dlx.Link(i + 1, j + 1);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            // prln(mid);</div><div class="line">            if(dlx.Dance(0)) r = mid - eps;</div><div class="line">            else l = mid + eps;</div><div class="line">        &#125;</div><div class="line">        printf("%.6f\n", l);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 2295&lt;br&gt;N个城市，M个雷达，每个雷达有自己的覆盖范围，选出K个雷达覆盖所有的城市。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;DLX 重复覆盖模板题&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="DLX" scheme="http://luoxinchen.me/tags/DLX/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-8-o</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-8-o/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-8-o/</id>
    <published>2016-09-11T06:44:55.000Z</published>
    <updated>2016-09-11T06:50:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>N个城市选出K个城市，建飞机场,1&lt;=N&lt;=60,1&lt;=K&lt;=N,使得所有城市中到最近机场的最大距离最小。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>二分城市到机场的最大距离，然后建立01矩阵，用DLX可重复覆盖判断是否合法<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line"></div><div class="line">const int MaxM = 60 + 5, MaxN = 60 + 5;</div><div class="line">const int maxnode = MaxM * MaxN;</div><div class="line"></div><div class="line">struct DLX &#123;</div><div class="line">    // n 个雷达，m个城市，能否用 K 个雷达 覆盖所有的m个城市。</div><div class="line">    // 可重复覆盖</div><div class="line">    int n, m, size;</div><div class="line">    int K;</div><div class="line">    int U[maxnode], D[maxnode], R[maxnode], L[maxnode];</div><div class="line">    int Row[maxnode], Col[maxnode];</div><div class="line">    int H[MaxN], S[MaxN];</div><div class="line">    int ind[MaxN];</div><div class="line"></div><div class="line">    int ands, ans[MaxN];</div><div class="line">    void init(int _n, int _m) &#123;</div><div class="line">        n = _n;</div><div class="line">        m = _m;</div><div class="line">        for (int i = 0; i &lt;= m; i++) &#123;</div><div class="line">            S[i] = 0;</div><div class="line">            U[i] = D[i] = i;</div><div class="line">            L[i] = i - 1;</div><div class="line">            R[i] = i + 1;</div><div class="line">        &#125;</div><div class="line">        R[m] = 0; L[0] = m;</div><div class="line">        size = m;</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            H[i] = -1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void Link(int r, int c) &#123;</div><div class="line">        ++S[Col[++size] = c];</div><div class="line">        Row[size] = r;</div><div class="line">        D[size] = D[c];</div><div class="line">        U[D[c]] = size;</div><div class="line">        U[size] = c;</div><div class="line">        D[c] = size;</div><div class="line">        if(H[r] &lt; 0) &#123;</div><div class="line">            H[r] = L[size] = R[size] = size;</div><div class="line">        &#125; else &#123;</div><div class="line">            R[size] = R[H[r]];</div><div class="line">            L[R[H[r]]] = size;</div><div class="line">            L[size] = H[r];</div><div class="line">            R[H[r]] = size;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void remove(int c) &#123;</div><div class="line">        for (int i = D[c]; i != c; i = D[i]) &#123;</div><div class="line">            L[R[i]] = L[i], R[L[i]] = R[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    void resume(int c) &#123;</div><div class="line">        for (int i = U[c]; i != c; i = U[i]) &#123;</div><div class="line">            L[R[i]] = R[L[i]] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    bool v[maxnode];</div><div class="line"></div><div class="line">    int f() &#123;</div><div class="line">        int ret = 0;</div><div class="line">        for (int c = R[0]; c != 0; c = R[c]) v[c] = true;</div><div class="line">        for (int c = R[0]; c != 0; c = R[c]) &#123;</div><div class="line">            if(v[c]) &#123;</div><div class="line">                ret++;</div><div class="line">                v[c] = false;</div><div class="line">                for (int i = D[c]; i != c; i = D[i]) &#123;</div><div class="line">                    for (int j = R[i]; j != i; j = R[j]) &#123;</div><div class="line">                        v[Col[j]] = false;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return ret;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    bool Dance(int d) &#123;</div><div class="line">        if (d + f() &gt; K) return false;</div><div class="line">        if (R[0] == 0) return d &lt;= K;</div><div class="line">        int c = R[0];</div><div class="line">        for (int i = R[0]; i != 0; i = R[i]) &#123;</div><div class="line">            if(S[i] &lt; S[c]) &#123;</div><div class="line">                c = i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        for (int i = D[c]; i != c; i = D[i]) &#123;</div><div class="line">            remove(i);</div><div class="line">            for (int j = R[i]; j != i; j = R[j]) remove(j);</div><div class="line">            if(Dance(d + 1)) return true;</div><div class="line">            for (int j = L[i]; j != i; j = L[j]) resume(j);</div><div class="line">            resume(i);</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;dlx;</div><div class="line"></div><div class="line"></div><div class="line">const int maxn = 60 + 5;</div><div class="line">int X[maxn], Y[maxn];</div><div class="line">ll dis[maxn*maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T;</div><div class="line">    int N, K;</div><div class="line">    scanf("%d", &amp;T);</div><div class="line">    for (int Case = 1; Case &lt;= T; Case++) &#123;</div><div class="line">        scanf("%d%d", &amp;N, &amp;K);</div><div class="line">        dlx.K = K;</div><div class="line">        for (int i = 1; i &lt;= N; i++) &#123;</div><div class="line">            scanf("%d%d", &amp;X[i], &amp;Y[i]);</div><div class="line">        &#125;</div><div class="line">        int cnt_d = 0;</div><div class="line">        for (int i = 1; i &lt;= N; i++) &#123;</div><div class="line">            for (int j = 1; j &lt;= N; j++) &#123;</div><div class="line">                dis[cnt_d++] = (ll)abs(X[i] - X[j]) + (ll)abs(Y[i] - Y[j]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        sort(dis, dis + cnt_d);</div><div class="line">        cnt_d = unique(dis, dis + cnt_d) - dis;</div><div class="line">        int l = -1, r = cnt_d;</div><div class="line">        while(l &lt; r - 1) &#123;</div><div class="line">            int m = (l + r) &gt;&gt; 1;</div><div class="line">            ll mid = dis[m];</div><div class="line">            dlx.init(N, N);</div><div class="line">            for (int i = 1; i &lt;= N; i++) &#123;</div><div class="line">                for (int j = 1; j &lt;= N; j++) &#123;</div><div class="line">                    if((ll)abs(X[i] - X[j]) + (ll)abs(Y[i] - Y[j]) &lt;= mid) &#123;</div><div class="line">                        dlx.Link(i, j);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(dlx.Dance(0)) r = m;</div><div class="line">            else l = m;</div><div class="line">        &#125;</div><div class="line">        printf("Case #%d: %lld\n", Case, dis[r]);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;N个城市选出K个城市，建飞机场,1&amp;lt;=N&amp;lt;=60,1&amp;lt;=K&amp;lt;=N,使得所有城市中到最近机场的最大距离最小。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;二分城市到机场的最大距离，然后建立01矩阵，用DLX可重复覆盖判断是否合法&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="DLX" scheme="http://luoxinchen.me/tags/DLX/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-8-n</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-8-n/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-8-n/</id>
    <published>2016-09-11T06:40:57.000Z</published>
    <updated>2016-09-11T06:44:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>HDU 1255<br>给定平面上若干矩形,求出被这些矩形覆盖过至少两次的区域的面积. </p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>做法1:扫描线+线段树<br>做法2:离散化+二维前缀和<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>因为这里矩形数量&lt;=1000,所以用二维前缀和的写法会简单很多<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1000 + 5;</div><div class="line">double X1[maxn], Y1[maxn], X2[maxn], Y2[maxn];</div><div class="line">int cnt_vx, cnt_vy;</div><div class="line">double Vx[2*maxn];</div><div class="line">double Vy[2*maxn];</div><div class="line">int get_xid(double x) &#123;</div><div class="line">    return lower_bound(Vx, Vx + cnt_vx, x) - Vx;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int get_yid(double y) &#123;</div><div class="line">    return lower_bound(Vy, Vy + cnt_vy, y) - Vy;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int N;</div><div class="line">short mt[2*maxn][2*maxn];</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T;</div><div class="line">    scanf("%d", &amp;T);</div><div class="line">    while(T--) &#123;</div><div class="line">        scanf("%d", &amp;N);</div><div class="line">        cnt_vx = cnt_vy = 0;</div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            scanf("%lf%lf%lf%lf", &amp;X1[i], &amp;Y1[i], &amp;X2[i], &amp;Y2[i]);</div><div class="line">            Vx[cnt_vx++] = X1[i];</div><div class="line">            Vy[cnt_vy++] = Y1[i];</div><div class="line">            Vx[cnt_vx++] = X2[i];</div><div class="line">            Vy[cnt_vy++] = Y2[i];</div><div class="line">        &#125;</div><div class="line">        sort(Vx, Vx + cnt_vx);</div><div class="line">        sort(Vy, Vy + cnt_vy);</div><div class="line">        memset(mt, 0, sizeof(mt));</div><div class="line">        for (int i = 0; i &lt; N; i++) &#123;</div><div class="line">            double x1 = X1[i], y1 = Y1[i], x2 = X2[i], y2 = Y2[i];</div><div class="line">            int idx1 = get_xid(x1);</div><div class="line">            int idy1 = get_yid(y1);</div><div class="line">            int idx2 = get_xid(x2);</div><div class="line">            int idy2 = get_yid(y2);</div><div class="line">            mt[idx1+1][idy1+1]++;</div><div class="line">            mt[idx2+1][idy1+1]--;</div><div class="line">            mt[idx1+1][idy2+1]--;</div><div class="line">            mt[idx2+1][idy2+1]++;</div><div class="line">        &#125;</div><div class="line">        double ans = 0;</div><div class="line">        for (int i = 0; i &lt; cnt_vx; i++) &#123;</div><div class="line">            int t = 0;</div><div class="line">            for (int j = 0; j &lt; cnt_vy; j++) &#123;</div><div class="line">                t += mt[i][j];</div><div class="line">                mt[i][j] = t;</div><div class="line">                if(i &gt; 0) mt[i][j] += mt[i-1][j];</div><div class="line">                if(mt[i][j] &gt; 1) &#123;</div><div class="line">                    ans += (Vx[i] - Vx[i-1]) * (Vy[j] - Vy[j-1]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("%.2f\n", ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;HDU 1255&lt;br&gt;给定平面上若干矩形,求出被这些矩形覆盖过至少两次的区域的面积. &lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;做法1:扫描线+线段树&lt;br&gt;做法2:离散化+二维前缀和&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU 1255" scheme="http://luoxinchen.me/tags/HDU-1255/"/>
    
      <category term="矩形面积并" scheme="http://luoxinchen.me/tags/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E5%B9%B6/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-8-k</title>
    <link href="http://luoxinchen.me/2016/09/11/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-8-k/"/>
    <id>http://luoxinchen.me/2016/09/11/暑期集训-7-8-k/</id>
    <published>2016-09-11T06:36:58.000Z</published>
    <updated>2016-09-11T06:40:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定一个长度为1e5的序列，给1e5个操作，两种操作，一种是将一段区间内的数开方，一种操作区间和</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>用线段树维护一下，并且当区间所有数位1的时候开方操作就可以不用递归下去，每个数最后可以开方logn次，所以最坏复杂度为nlogn。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">#define lson l,m,rt&lt;&lt;1</div><div class="line">#define rson m+1,r,rt&lt;&lt;1|1</div><div class="line"></div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">struct SegTree &#123;</div><div class="line">    ll sum[maxn&lt;&lt;2];</div><div class="line">    bool eqone[maxn&lt;&lt;2];</div><div class="line">    </div><div class="line">    void push_up(int rt) &#123;</div><div class="line">        sum[rt] = sum[rt&lt;&lt;1] + sum[rt&lt;&lt;1|1];</div><div class="line">        eqone[rt] = eqone[rt&lt;&lt;1] &amp;&amp; eqone[rt&lt;&lt;1|1];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void init() &#123;</div><div class="line">        memset(sum, 0, sizeof(sum));</div><div class="line">        memset(eqone, false, sizeof(eqone));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void build(int l, int r, int rt) &#123;</div><div class="line">        // pr(l); pr(r); prln(rt);</div><div class="line">        if(l == r) &#123;</div><div class="line">            scanf("%lld", &amp;sum[rt]);</div><div class="line">           // pr("leaf");  pr(rt);</div><div class="line">            // prln(sum[rt]);</div><div class="line">            if(sum[rt] == 1) eqone[rt] = true;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        int m = (l + r) &gt;&gt; 1;</div><div class="line">        build(lson);</div><div class="line">        build(rson);</div><div class="line">        push_up(rt);</div><div class="line">        // pr(rt); prln(sum[rt]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void update(int L, int R, int l, int r, int rt) &#123;</div><div class="line">        if(eqone[rt]) return;</div><div class="line">        if(l == r) &#123;</div><div class="line">            sum[rt] = sqrt(sum[rt]);</div><div class="line">            if(sum[rt] == 1) eqone[rt] = true; </div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        int m = (l + r) &gt;&gt; 1;</div><div class="line">        if(L &lt;= m) update(L, R, lson);</div><div class="line">        if(m + 1 &lt;= R) update(L, R, rson);</div><div class="line">        push_up(rt);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ll querry(int L, int R, int l, int r, int rt) &#123;</div><div class="line">        if(L &lt;= l &amp;&amp; r &lt;= R) &#123;</div><div class="line">            return sum[rt];</div><div class="line">        &#125;</div><div class="line">        int m = (l + r) &gt;&gt; 1;</div><div class="line">        ll res = 0;</div><div class="line">        if(L &lt;= m) res += querry(L, R, lson);</div><div class="line">        if(m + 1 &lt;= R) res += querry(L, R, rson);</div><div class="line">        return res;</div><div class="line">    &#125;</div><div class="line">&#125;seg;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int Case = 0;</div><div class="line">    int n, m;</div><div class="line">    while(scanf("%d", &amp;n) == 1) &#123;</div><div class="line">        seg.init();</div><div class="line">        seg.build(1, n, 1);</div><div class="line">        scanf("%d", &amp;m);</div><div class="line">        printf("Case #%d:\n", ++Case);</div><div class="line">        for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">            int t, x, y;</div><div class="line">            scanf("%d%d%d", &amp;t, &amp;x, &amp;y);</div><div class="line">            if(x &gt; y) swap(x, y);</div><div class="line">            if(t == 0) &#123;</div><div class="line">                seg.update(x, y, 1, n, 1);</div><div class="line">            &#125; else &#123;</div><div class="line">                ll res = seg.querry(x, y, 1, n, 1);</div><div class="line">                printf("%lld\n", res);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        puts("");</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给定一个长度为1e5的序列，给1e5个操作，两种操作，一种是将一段区间内的数开方，一种操作区间和&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;用线段树维护一下，并且当区间所有数位1的时候开方操作就可以不用递归下去，每个数最后可以开方logn次，所以最坏复杂度为nlogn。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="线段树" scheme="http://luoxinchen.me/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-8-b</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-8-b/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-8-b/</id>
    <published>2016-09-10T15:21:39.000Z</published>
    <updated>2016-09-10T15:27:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给个二分图，求最大权匹配</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>KM算法，或者最小费用流可行流<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 250;</div><div class="line">const int maxm = 25005;</div><div class="line">const int inf= 0x3f3f3f3f;</div><div class="line">char s[200];</div><div class="line">int a[maxn],mat[maxn][maxn];</div><div class="line">struct Edge&#123;</div><div class="line">	int to,next,cap,flow,cost;</div><div class="line">&#125;edge[maxm];</div><div class="line">int head[maxn],tot;</div><div class="line">int pre[maxn],dis[maxn];</div><div class="line">bool vis[maxn];int N;</div><div class="line">void init(int n)&#123;</div><div class="line">	N=n;</div><div class="line">	tot=0;</div><div class="line">	memset(head,-1,sizeof(head));</div><div class="line">&#125;</div><div class="line">void addedge(int u,int v,int cap,int cost)&#123;</div><div class="line">	edge[tot].to=v;</div><div class="line">	edge[tot].cap=cap;</div><div class="line">	edge[tot].cost=cost;</div><div class="line">	edge[tot].flow=0;</div><div class="line">	edge[tot].next=head[u];</div><div class="line">	head[u]=tot++;</div><div class="line">	edge[tot].to=u;</div><div class="line">	edge[tot].cap=0;</div><div class="line">	edge[tot].cost=-cost;</div><div class="line">	edge[tot].flow=0;</div><div class="line">	edge[tot].next=head[v];</div><div class="line">	head[v]=tot++; </div><div class="line">&#125; </div><div class="line">bool spfa(int s,int t)&#123;</div><div class="line">	queue&lt;int&gt; q;</div><div class="line">	for(int i=0;i&lt;N;i++)&#123;</div><div class="line">		dis[i]=inf;</div><div class="line">		vis[i]=false;</div><div class="line">		pre[i]=-1;</div><div class="line">	&#125; dis[s]=0;</div><div class="line">	vis[s]=true;</div><div class="line">	q.push(s);</div><div class="line">	while(!q.empty())&#123;</div><div class="line">		int u=q.front();</div><div class="line">		q.pop();</div><div class="line">		vis[u]=false;</div><div class="line">		for(int i=head[u];i!=-1;i=edge[i].next)&#123;</div><div class="line">			int v=edge[i].to;</div><div class="line">			if(edge[i].cap&gt;edge[i].flow&amp;&amp;dis[v]&gt;dis[u]+edge[i].cost)&#123;</div><div class="line">				dis[v]=dis[u]+edge[i].cost;</div><div class="line">				pre[v]=i;</div><div class="line">				if(!vis[v])&#123;</div><div class="line">					vis[v]=true;</div><div class="line">					q.push(v);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;if(pre[t]==-1) return false;</div><div class="line">	else return true;</div><div class="line">&#125;</div><div class="line">int mincostmaxflow(int s,int t,int &amp;cost)&#123;</div><div class="line">	int flow=0;</div><div class="line">	cost=0;</div><div class="line">	while(spfa(s,t))&#123;</div><div class="line">		int Min=inf;</div><div class="line">		for(int i=pre[t];i!=-1;i=pre[edge[i^1].to])&#123;</div><div class="line">			if(Min&gt;edge[i].cap-edge[i].flow) Min=edge[i].cap-edge[i].flow;</div><div class="line">		&#125;for(int i=pre[t];i!=-1;i=pre[edge[i^1].to])&#123;</div><div class="line">			edge[i].flow+=Min;</div><div class="line">			edge[i^1].flow-=Min;</div><div class="line">			cost+=edge[i].cost*Min;</div><div class="line">		&#125;flow+=Min;</div><div class="line">	&#125;return flow;</div><div class="line">&#125;</div><div class="line"></div><div class="line">char str[maxn];</div><div class="line"></div><div class="line">int A[maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int n;</div><div class="line">    while(scanf("%d", &amp;n) == 1 &amp;&amp; n) &#123;</div><div class="line">        int s = 0, t = 2 * n + 1;</div><div class="line">        init(2*n + 2);</div><div class="line">        for(int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf("%d", &amp;A[i]);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            addedge(s, i, 1, 0);</div><div class="line">            addedge(i, t, 1, 0);</div><div class="line">            addedge(i + n, t, 1, 0);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">            scanf("%s", str + 1);</div><div class="line">            for (int j = 1; j &lt;= n; j++) &#123;</div><div class="line">                if(str[j] == '1') &#123;</div><div class="line">                    addedge(i, j + n, 1, -(A[i]^A[j]));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int cost;</div><div class="line">        mincostmaxflow(s, t, cost);</div><div class="line">        printf("%d\n", -cost);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给个二分图，求最大权匹配&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;KM算法，或者最小费用流可行流&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
      <category term="二分图最大权匹配" scheme="http://luoxinchen.me/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E6%9D%83%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-8-a</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-8-a/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-8-a/</id>
    <published>2016-09-10T14:47:28.000Z</published>
    <updated>2016-09-10T15:12:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给一个只包含小写字母的字符串，给n个单词，问这个字符串能有多少种解读方法</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>KMP 预处理一下当前match[i][j],i位置为单词结束，能否和单词j匹配，然后dp一下即可。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int mod = 835672545;</div><div class="line">const int maxn = 1000 + 5;</div><div class="line">char words[maxn][maxn];</div><div class="line">char str[maxn];</div><div class="line">int match[maxn][maxn];</div><div class="line">int n;</div><div class="line">int dp[maxn];</div><div class="line">int wordlen[maxn];</div><div class="line">int lenstr;</div><div class="line"></div><div class="line">struct KMP &#123;</div><div class="line">    int nxt[maxn];</div><div class="line">    void get_next(int words_num) &#123;</div><div class="line">        char *s = words[words_num];</div><div class="line">        int len = wordlen[words_num];</div><div class="line">        int i, k;</div><div class="line">        nxt[0] = k = -1;</div><div class="line">        for (i = 0; i &lt; len;) &#123;</div><div class="line">            if(k == -1 || s[i] == s[k]) &#123;</div><div class="line">                k++; i++;</div><div class="line">                nxt[i] = k;</div><div class="line">            &#125; else k = nxt[k];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    void solve(int words_num) &#123;</div><div class="line">        char *w = words[words_num];</div><div class="line">        int lw = wordlen[words_num], lstr = lenstr;</div><div class="line">        int j = 0;</div><div class="line">        for (int i = 0; i &lt; lstr;) &#123;</div><div class="line">            if(j == -1 || w[j] ==str[i]) &#123;</div><div class="line">                i++; j++;</div><div class="line">                if(j == lw) &#123;</div><div class="line">                    match[words_num][i-1] = 1;</div><div class="line">                    j = nxt[j];</div><div class="line">                    // pr(j);</div><div class="line">                    // pr(words_num), prln(i);</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                j = nxt[j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;kmp;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int T; scanf("%d", &amp;T);</div><div class="line">    for (int Cas = 1; Cas &lt;= T; Cas++) &#123;</div><div class="line">        scanf("%d", &amp;n);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            scanf("%s", words[i]);</div><div class="line">            wordlen[i] = strlen(words[i]);</div><div class="line">        &#125;</div><div class="line">        scanf("%s", str);</div><div class="line">        lenstr = strlen(str);</div><div class="line">        memset(match, 0, sizeof(match));</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            kmp.get_next(i);</div><div class="line">            kmp.solve(i);</div><div class="line">        &#125;</div><div class="line">        memset(dp, 0, sizeof(dp));</div><div class="line">        dp[0] = 1;</div><div class="line">        int len = strlen(str);</div><div class="line">        for (int i = 1; i &lt;= len; i++) &#123;</div><div class="line">            for (int j = 0; j &lt; n; j++) &#123;</div><div class="line">                if(match[j][i-1]) &#123;</div><div class="line">                    dp[i] = (dp[i] + dp[i-wordlen[j]]) % mod;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("%d\n", dp[len]);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给一个只包含小写字母的字符串，给n个单词，问这个字符串能有多少种解读方法&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;KMP 预处理一下当前match[i][j],i位置为单词结束，能否和单词j匹配，然后dp一下即可。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="SOJ" scheme="http://luoxinchen.me/tags/SOJ/"/>
    
      <category term="KMP" scheme="http://luoxinchen.me/tags/KMP/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-t</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-t/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-t/</id>
    <published>2016-09-10T03:14:46.000Z</published>
    <updated>2016-09-10T03:18:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定一些长方体，求其能叠放的最大高度。一个长方体能叠在另一个上面的条件是，其底面的长和宽都严格大于另一个</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>把一个长方体拆成3个，然后排个序，dp一下<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 200;</div><div class="line">struct Block &#123;</div><div class="line">    int x, y, z;</div><div class="line">    Block(int x, int y, int z):x(x), y(y), z(z) &#123;&#125;</div><div class="line">    Block() &#123;&#125;</div><div class="line">    bool operator &lt; (const Block &amp;b) const &#123;</div><div class="line">        return x &lt; b.x || (x == b.x &amp;&amp; y &lt; b.y) ||</div><div class="line">            (x == b.x &amp;&amp; y == b.y &amp;&amp; z &lt; b.z);</div><div class="line">    &#125;</div><div class="line">    bool greater(const Block &amp;b) const &#123;</div><div class="line">        return x &gt; b.x &amp;&amp; y &gt; b.y;</div><div class="line">    &#125;</div><div class="line">&#125;blocks[maxn];</div><div class="line"></div><div class="line">int dp[maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int n;</div><div class="line">    int Cas = 0;</div><div class="line">    while(scanf("%d", &amp;n) == 1 &amp;&amp; n) &#123;</div><div class="line">        int cnt = 0;</div><div class="line">        blocks[cnt++] = Block(0, 0, 0);</div><div class="line">        for (int i = 0; i &lt; n; i++) &#123;</div><div class="line">            int x, y, z;</div><div class="line">            scanf("%d%d%d", &amp;x, &amp;y, &amp;z);</div><div class="line">            blocks[cnt++] = Block(x, y, z);</div><div class="line">            blocks[cnt++] = Block(x, z, y);</div><div class="line">            blocks[cnt++] = Block(y, x, z);</div><div class="line">            blocks[cnt++] = Block(y, z, x);</div><div class="line">            blocks[cnt++] = Block(z, x, y);</div><div class="line">            blocks[cnt++] = Block(z, y, x);</div><div class="line">        &#125;</div><div class="line">        sort(blocks, blocks + cnt);</div><div class="line">        memset(dp, 0, sizeof(dp));</div><div class="line">        int ans = 0;</div><div class="line">        for (int i = 0; i &lt; cnt; i++) &#123;</div><div class="line">            for (int j = 0; j &lt; i; j++) &#123;</div><div class="line">                if(blocks[i].greater(blocks[j])) &#123;</div><div class="line">                    dp[i] = max(dp[i], dp[j] + blocks[i].z);</div><div class="line">                    ans = max(ans, dp[i]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("Case %d: maximum height = %d\n", ++Cas, ans);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给定一些长方体，求其能叠放的最大高度。一个长方体能叠在另一个上面的条件是，其底面的长和宽都严格大于另一个&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;把一个长方体拆成3个，然后排个序，dp一下&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="dp" scheme="http://luoxinchen.me/tags/dp/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="HDU" scheme="http://luoxinchen.me/tags/HDU/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-s</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-s/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-s/</id>
    <published>2016-09-10T03:10:35.000Z</published>
    <updated>2016-09-10T03:14:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给个长度为n的学列A，m个询问。每个询问给出li，ri, xi. 对于每个询问，找到pi(li &lt;= pi &lt;= ri),A[pi] != xi</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>对于每个位置，预处理下和当前位置上的数不同的最近的右边/左边的位置就好<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 2e5 + 5;</div><div class="line">int A[maxn], dp[maxn];</div><div class="line">int n, m;</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    scanf("%d%d", &amp;n, &amp;m);</div><div class="line">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        scanf("%d", &amp;A[i]);</div><div class="line">    &#125;</div><div class="line">    dp[1] = 1;</div><div class="line">    for (int i = 2; i &lt;= n; i++) &#123;</div><div class="line">        if(A[i] == A[i-1]) dp[i] = dp[i-1]; </div><div class="line">        else dp[i] = i;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">        int l, r, x;</div><div class="line">        scanf("%d%d%d", &amp;l, &amp;r, &amp;x);</div><div class="line">        if(A[r] == x) &#123;</div><div class="line">            if(dp[r] &lt;= l) &#123;</div><div class="line">                printf("%d\n", -1);</div><div class="line">            &#125; else printf("%d\n", dp[r] - 1);</div><div class="line">        &#125; else &#123;</div><div class="line">            printf("%d\n", r);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给个长度为n的学列A，m个询问。每个询问给出li，ri, xi. 对于每个询问，找到pi(li &amp;lt;= pi &amp;lt;= ri),A[pi] != xi&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;对于每个位置，预处理下和当前位置上的数不同的最近的右边/左边的位置就好&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="简单题" scheme="http://luoxinchen.me/tags/%E7%AE%80%E5%8D%95%E9%A2%98/"/>
    
      <category term="Codeforces" scheme="http://luoxinchen.me/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-r</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-r/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-r/</id>
    <published>2016-09-10T03:04:23.000Z</published>
    <updated>2016-09-10T03:10:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>石头剪子布，分别有r,s,p个，相互碰到输的一方会死去，两两之间等概率相遇，最后每种是唯一活下去的概率</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>考虑dp[i][j][k]表示石头剪子布分别剩i,j,k个的概率。因为同种相遇不改变状态。所以tot = i <em> j + j </em> k + i * k<br>然后考虑三种相遇情况转移就好.</p>
<a id="more"></a>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 100 + 5;</div><div class="line">double dp[maxn][maxn][maxn];</div><div class="line"></div><div class="line">bool judge(int a, int b, int c) &#123;</div><div class="line">    int t = (a &gt; 0) + (b &gt; 0) + (c &gt; 0);</div><div class="line">    return t &gt;= 2;</div><div class="line">&#125;</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int r, s, p;</div><div class="line">    scanf("%d%d%d", &amp;r, &amp;s, &amp;p);</div><div class="line">    dp[r][s][p] = 1;</div><div class="line">    double ansr = 0, anss = 0, ansp = 0;</div><div class="line"></div><div class="line">    for (int i = r; i &gt;= 0; i--) &#123;</div><div class="line">        for (int j = s; j &gt;= 0; j--) &#123;</div><div class="line">            for (int k = p; k &gt;= 0; k--) &#123;</div><div class="line">                if(judge(i + 1, j, k)) dp[i][j][k] += dp[i+1][j][k] * double((i+1)*k)/double((i+1)*j + (i+1)*k + j*k);</div><div class="line">                if(judge(i, j + 1, k)) dp[i][j][k] += dp[i][j+1][k] * double((j+1)*i)/double(i*(j+1) + i*k + (j+1)*k);</div><div class="line">                if(judge(i, j, k + 1)) dp[i][j][k] += dp[i][j][k+1] * double((k+1)*j)/double(i*j + i*(k+1) + j*(k+1));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    for (int i = 1; i &lt; maxn; i++) &#123;</div><div class="line">        ansr += dp[i][0][0];</div><div class="line">        anss += dp[0][i][0];</div><div class="line">        ansp += dp[0][0][i];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printf("%.9f %.9f %.9f\n", ansr, anss, ansp);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;石头剪子布，分别有r,s,p个，相互碰到输的一方会死去，两两之间等概率相遇，最后每种是唯一活下去的概率&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;考虑dp[i][j][k]表示石头剪子布分别剩i,j,k个的概率。因为同种相遇不改变状态。所以tot = i &lt;em&gt; j + j &lt;/em&gt; k + i * k&lt;br&gt;然后考虑三种相遇情况转移就好.&lt;/p&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="dp" scheme="http://luoxinchen.me/tags/dp/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="Codeforces" scheme="http://luoxinchen.me/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-q</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-q/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-q/</id>
    <published>2016-09-10T02:59:17.000Z</published>
    <updated>2016-09-10T03:03:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 2955<br>求最长匹配的括号子序列</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>区间dp一下就好<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 100 + 5;</div><div class="line">int dp[maxn][maxn];</div><div class="line">int ans[maxn];</div><div class="line">char str[maxn];</div><div class="line"></div><div class="line">int dfs(int i, int j) &#123;</div><div class="line">    if(i &gt;= j) return 0;</div><div class="line">    if(dp[i][j] != -1) return dp[i][j];</div><div class="line">    else &#123;</div><div class="line">        if((str[i] == '(' &amp;&amp; str[j] == ')') || </div><div class="line">                (str[i] == '[' &amp;&amp; str[j] == ']')) &#123;</div><div class="line">            dp[i][j] = max(dp[i][j], dfs(i+1, j-1) + 2);</div><div class="line">        &#125;</div><div class="line">        for (int k = i; k &lt;= j; k++) &#123;</div><div class="line">            dp[i][j] = max(dp[i][j], (dfs(i, k) + dfs(k+1, j)));</div><div class="line">        &#125;</div><div class="line">        return dp[i][j];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    while(scanf("%s", str) == 1) &#123;</div><div class="line">        if(strcmp(str, "end") == 0) &#123;</div><div class="line">            return 0;</div><div class="line">        &#125;</div><div class="line">        int len = strlen(str);</div><div class="line">        memset(dp, -1, sizeof(dp));</div><div class="line">        dfs(0, len - 1);</div><div class="line">        printf("%d\n", dfs(0, len-1));</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 2955&lt;br&gt;求最长匹配的括号子序列&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;区间dp一下就好&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="dp" scheme="http://luoxinchen.me/tags/dp/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-o</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-o/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-o/</id>
    <published>2016-09-10T02:51:02.000Z</published>
    <updated>2016-09-10T02:58:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>一个软件系统有s个子系统，会产生n种bug，某人一天发现一个bug，这个bug属于一个子系统和一个分类。每个bug属于某个子系统的概率是1/s,属于一个分类，问发现n中bug，并且每个子系统都发现bug的天数的期望。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>设dp[i][j]表示已经找到i种bug，j个系统的bug，需要达到目标状态的天数期望<br>dp[n][s] = 0;<br>然后分成四种情况转移就好，转移到自己很特殊，所以只有3种情况，注意概率的转化<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1000 + 5;</div><div class="line">double dp[maxn][maxn];</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int n, s;</div><div class="line">    scanf("%d%d", &amp;n, &amp;s);</div><div class="line">    dp[n][s] = 0;</div><div class="line">    for (int i = n; i &gt;= 0; i--) &#123;</div><div class="line">        for (int j = s; j &gt;= 0; j--) &#123;</div><div class="line">            if(i == n &amp;&amp; j == s) continue;</div><div class="line">            double p1 = double(i) / n, p2 = double(j) / s;</div><div class="line">            double t = 1 - p1 * p2;</div><div class="line">            dp[i][j] += (dp[i+1][j] + 1/ t) * (1 - p1) * p2 / t; </div><div class="line">            dp[i][j] += (dp[i+1][j+1] + 1/ t) * (1 - p1)*(1-p2)/t; </div><div class="line">            dp[i][j] += (dp[i][j+1] + 1/ t) * p1 * (1 - p2) / t; </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    for (int i = 0; i &lt;= n; i++) &#123;</div><div class="line">        for (int j = 0; j &lt;= s; j++) &#123;</div><div class="line">            printf("%.4f ", dp[i][j]);</div><div class="line">        &#125;</div><div class="line">        puts("");</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printf("%.4f\n", dp[0][0]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;一个软件系统有s个子系统，会产生n种bug，某人一天发现一个bug，这个bug属于一个子系统和一个分类。每个bug属于某个子系统的概率是1/s,属于一个分类，问发现n中bug，并且每个子系统都发现bug的天数的期望。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;设dp[i][j]表示已经找到i种bug，j个系统的bug，需要达到目标状态的天数期望&lt;br&gt;dp[n][s] = 0;&lt;br&gt;然后分成四种情况转移就好，转移到自己很特殊，所以只有3种情况，注意概率的转化&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="dp" scheme="http://luoxinchen.me/tags/dp/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="概率" scheme="http://luoxinchen.me/tags/%E6%A6%82%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-n</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-n/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-n/</id>
    <published>2016-09-10T02:37:40.000Z</published>
    <updated>2016-09-10T02:50:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>Codeforces    687D<br>给一个图n个点，m条边，q个询问<br>每次询问l，r，用l，r以内的边，构成一个图几何。把这个图中的点，分成两个部分，这个图的hardness定义为同一部分里面最长边的长度，求这个hardness的最小值。</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>对所有边从大大小排序，对于每个询问，暴力跑一下所有边，用并查集判断一下就好。<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 1000 + 5;</div><div class="line"></div><div class="line">struct DSU &#123;</div><div class="line">    int par[4*maxn], n;</div><div class="line">    void init(int n) &#123;</div><div class="line">        this-&gt;n = n;</div><div class="line">        for (int i = 0; i &lt;= n; i++) &#123;</div><div class="line">            par[i] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int find(int x) &#123;</div><div class="line">        return x == par[x] ? x : par[x] = find(par[x]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    bool merge(int a, int b) &#123;</div><div class="line">        if(find(a &lt;&lt; 1) == find(b &lt;&lt; 1)) &#123;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">        par[find(a &lt;&lt; 1)] = find(b &lt;&lt; 1 | 1);</div><div class="line">        par[find(b &lt;&lt; 1)] = find(a &lt;&lt; 1 | 1);</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">&#125;dsu;</div><div class="line"></div><div class="line">struct Edge &#123;</div><div class="line">    int u, v, w, num;</div><div class="line">    Edge() &#123;&#125;</div><div class="line">    Edge(int u, int v, int w):u(u), v(v), w(w) &#123;&#125;</div><div class="line">&#125;es[maxn*maxn];</div><div class="line"></div><div class="line">bool cmp(const Edge &amp;a, const Edge &amp;b) &#123;</div><div class="line">    return a.w &gt; b.w;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int n, m, q;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    scanf("%d%d%d", &amp;n, &amp;m, &amp;q);</div><div class="line">    for (int i = 0; i &lt; m; i++) &#123;</div><div class="line">        scanf("%d%d%d", &amp;es[i].u, &amp;es[i].v, &amp;es[i].w);</div><div class="line">        es[i].u--; es[i].v--;</div><div class="line">        es[i].num = i + 1;</div><div class="line">    &#125;</div><div class="line">    sort(es, es + m, cmp);</div><div class="line">    for (int i = 0; i &lt; q; i++) &#123;</div><div class="line">        int l, r;</div><div class="line">        scanf("%d%d", &amp;l, &amp;r);</div><div class="line">        int res = -1;</div><div class="line">        dsu.init(2*n);</div><div class="line">        for (int j = 0; j &lt; m &amp;&amp; res == -1; j++) &#123;</div><div class="line">            if(es[j].num &gt;=l &amp;&amp; es[j].num &lt;= r) &#123;</div><div class="line">                if(!dsu.merge(es[j].u, es[j].v)) &#123;</div><div class="line">                    res = es[j].w;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf("%d\n", res);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;Codeforces    687D&lt;br&gt;给一个图n个点，m条边，q个询问&lt;br&gt;每次询问l，r，用l，r以内的边，构成一个图几何。把这个图中的点，分成两个部分，这个图的hardness定义为同一部分里面最长边的长度，求这个hardness的最小值。&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;对所有边从大大小排序，对于每个询问，暴力跑一下所有边，用并查集判断一下就好。&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="DSU" scheme="http://luoxinchen.me/tags/DSU/"/>
    
      <category term="Codeforces" scheme="http://luoxinchen.me/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-m</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-m/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-m/</id>
    <published>2016-09-10T02:31:18.000Z</published>
    <updated>2016-09-10T02:34:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>Codeforces 687C<br>给n个数，问在n个数里面选一些数字，和为k的条件下，这些集合的子集元素和可以为多少</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>简单dp，dp[i][sum][k]表示前i个数，和为sum，k是否能为子集和<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int maxn = 500 + 5;</div><div class="line">int subset[maxn][maxn];</div><div class="line">int sum[maxn];</div><div class="line">int C[maxn];</div><div class="line">int n, K;</div><div class="line"></div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    scanf("%d%d", &amp;n, &amp;K);</div><div class="line">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        scanf("%d", &amp;C[i]);</div><div class="line">    &#125;</div><div class="line">    sum[0] = 1, subset[0][0] = 1; </div><div class="line">    for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">        int c = C[i];</div><div class="line">        for (int j = K; j &gt;= c; j--) &#123;</div><div class="line">            if(sum[j-c]) &#123;</div><div class="line">                sum[j] = 1;</div><div class="line">                for (int k = 0; k &lt;= j - c; k++) &#123;</div><div class="line">                    if(subset[j-c][k]) &#123;</div><div class="line">                        subset[j][k] = 1;</div><div class="line">                        subset[j][k+c] = 1;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    vector&lt;int&gt; ans;</div><div class="line">    for (int i = 0; i &lt;= K; i++) &#123;</div><div class="line">        if(subset[K][i]) &#123;</div><div class="line">            ans.push_back(i);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    printf("%d\n", (int)ans.size());</div><div class="line">    for (auto x: ans) &#123;</div><div class="line">        printf("%d ", x);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;Codeforces 687C&lt;br&gt;给n个数，问在n个数里面选一些数字，和为k的条件下，这些集合的子集元素和可以为多少&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;简单dp，dp[i][sum][k]表示前i个数，和为sum，k是否能为子集和&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="dp" scheme="http://luoxinchen.me/tags/dp/"/>
    
      <category term="Codeforces" scheme="http://luoxinchen.me/tags/Codeforces/"/>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/tags/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>暑期集训-7-6-l</title>
    <link href="http://luoxinchen.me/2016/09/10/%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD-7-6-l/"/>
    <id>http://luoxinchen.me/2016/09/10/暑期集训-7-6-l/</id>
    <published>2016-09-10T02:20:43.000Z</published>
    <updated>2016-09-10T02:26:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>POJ 2566<br>给一个序列，让找到一个连续的子序列，使其和的绝对值最接近target.</p>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>非常经典的一个题。求出所有的前缀和，对前缀和排序，然后two pointers<br><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">/************************************************</div><div class="line"> *Author        :mathon</div><div class="line"> *Email         :luoxinchen96@gmail.com</div><div class="line">*************************************************/</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;queue&gt;</div><div class="line">#include &lt;set&gt;</div><div class="line">#include &lt;map&gt;</div><div class="line">#include &lt;string&gt;</div><div class="line">#include &lt;cmath&gt;</div><div class="line">#include &lt;cstdlib&gt;</div><div class="line">#include &lt;ctime&gt;</div><div class="line">#include &lt;stack&gt;</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int, int&gt; pii;</div><div class="line">typedef long long ll;</div><div class="line">typedef unsigned long long ull;</div><div class="line">#define xx first</div><div class="line">#define lowbit(x) (x&amp;-x)</div><div class="line">#define yy second</div><div class="line">#define pr(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; " "</div><div class="line">#define prln(x) cout &lt;&lt; #x &lt;&lt; " " &lt;&lt; x &lt;&lt; endl</div><div class="line">const int inf = 0x3f3f3f3f;</div><div class="line">const int maxn = 1e5 + 5;</div><div class="line">int A[maxn];</div><div class="line">pii sum[maxn];</div><div class="line">int main(void) &#123;</div><div class="line">#ifdef MATHON</div><div class="line">    //freopen("in.txt", "r", stdin);</div><div class="line">    //freopen("out.txt", "w", stdout);</div><div class="line">#endif</div><div class="line">    int n, k;</div><div class="line">    while(scanf("%d%d", &amp;n, &amp;k) == 2) &#123;</div><div class="line">        if(n == 0 &amp;&amp; k == 0) return 0;</div><div class="line">        memset(A, 0, sizeof(A));</div><div class="line">        memset(sum, 0, sizeof(sum));</div><div class="line">        sum[0] = pii(0, 0);</div><div class="line">        for (int i = 1; i &lt;= n; i++) &#123;</div><div class="line">           scanf("%d", &amp;A[i]);</div><div class="line">           sum[i].xx = sum[i-1].xx + A[i];</div><div class="line">           sum[i].yy = i;</div><div class="line">        &#125;</div><div class="line">        sort(sum, sum + n + 1);</div><div class="line">        for (int i = 0; i &lt; k; i++) &#123;</div><div class="line">            int t; scanf("%d", &amp;t);</div><div class="line">            int tmp = inf, ans = inf, ansl = -1, ansr = -1;</div><div class="line">            for (int l = 0, r = 1; r &lt;= n; r++) &#123;</div><div class="line">                if(l &lt; r &amp;&amp; abs(sum[r].xx - sum[l].xx - t) &lt; tmp) &#123;</div><div class="line">                    tmp = abs(sum[r].xx - sum[l].xx - t);</div><div class="line">                    ans = sum[r].xx - sum[l].xx;</div><div class="line">                    ansl = sum[l].yy, ansr = sum[r].yy;</div><div class="line">                &#125;</div><div class="line">                while(l &lt; r &amp;&amp; sum[r].xx - sum[l].xx &gt;= t) &#123;</div><div class="line">                    l++;</div><div class="line">                    if(l &lt; r &amp;&amp; abs(sum[r].xx - sum[l].xx - t) &lt; tmp) &#123;</div><div class="line">                        tmp = abs(sum[r].xx - sum[l].xx - t);</div><div class="line">                        ans = sum[r].xx - sum[l].xx;</div><div class="line">                        ansl = sum[l].yy; ansr = sum[r].yy;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(ansl &gt; ansr) swap(ansl, ansr);</div><div class="line">            printf("%d %d %d\n", ans, ansl + 1, ansr);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;POJ 2566&lt;br&gt;给一个序列，让找到一个连续的子序列，使其和的绝对值最接近target.&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;非常经典的一个题。求出所有的前缀和，对前缀和排序，然后two pointers&lt;br&gt;
    
    </summary>
    
      <category term="2016暑期集训" scheme="http://luoxinchen.me/categories/2016%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
    
      <category term="ACM" scheme="http://luoxinchen.me/tags/ACM/"/>
    
      <category term="2016 暑期集训" scheme="http://luoxinchen.me/tags/2016-%E6%9A%91%E6%9C%9F%E9%9B%86%E8%AE%AD/"/>
    
      <category term="POJ" scheme="http://luoxinchen.me/tags/POJ/"/>
    
      <category term="two pointers" scheme="http://luoxinchen.me/tags/two-pointers/"/>
    
  </entry>
  
</feed>
